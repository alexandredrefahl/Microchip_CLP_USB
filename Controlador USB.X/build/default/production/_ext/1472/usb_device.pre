
# 1 "../usb_device.c"

# 2 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\stddef.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 13
extern int errno;

# 64 "../GenericTypeDefs.h"
typedef enum _BOOL { FALSE = 0, TRUE } BOOL;
typedef enum _BIT { CLEAR = 0, SET } BIT;

# 72
typedef signed int INT;
typedef signed char INT8;
typedef signed short int INT16;
typedef signed long int INT32;



 typedef signed long long INT64;



typedef unsigned int UINT;
typedef unsigned char UINT8;
typedef unsigned short int UINT16;

# 90
typedef unsigned long int UINT32;


 typedef unsigned long long UINT64;


typedef union
{
UINT8 Val;
struct
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
} bits;
} UINT8_VAL, UINT8_BITS;

typedef union
{
UINT16 Val;
UINT8 v[2] ;
struct 
{
UINT8 LB;
UINT8 HB;
} byte;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
} bits;
} UINT16_VAL, UINT16_BITS;

# 184
typedef union
{
UINT32 Val;
UINT16 w[2] ;
UINT8 v[4] ;
struct 
{
UINT16 LW;
UINT16 HW;
} word;
struct 
{
UINT8 LB;
UINT8 HB;
UINT8 UB;
UINT8 MB;
} byte;
struct 
{
UINT16_VAL low;
UINT16_VAL high;
}wordUnion;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
 UINT8 b16:1;
 UINT8 b17:1;
 UINT8 b18:1;
 UINT8 b19:1;
 UINT8 b20:1;
 UINT8 b21:1;
 UINT8 b22:1;
 UINT8 b23:1;
 UINT8 b24:1;
 UINT8 b25:1;
 UINT8 b26:1;
 UINT8 b27:1;
 UINT8 b28:1;
 UINT8 b29:1;
 UINT8 b30:1;
 UINT8 b31:1;
} bits;
} UINT32_VAL;



typedef union
{
UINT64 Val;
UINT32 d[2] ;
UINT16 w[4] ;
UINT8 v[8] ;
struct 
{
UINT32 LD;
UINT32 HD;
} dword;
struct 
{
UINT16 LW;
UINT16 HW;
UINT16 UW;
UINT16 MW;
} word;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
 UINT8 b16:1;
 UINT8 b17:1;
 UINT8 b18:1;
 UINT8 b19:1;
 UINT8 b20:1;
 UINT8 b21:1;
 UINT8 b22:1;
 UINT8 b23:1;
 UINT8 b24:1;
 UINT8 b25:1;
 UINT8 b26:1;
 UINT8 b27:1;
 UINT8 b28:1;
 UINT8 b29:1;
 UINT8 b30:1;
 UINT8 b31:1;
 UINT8 b32:1;
 UINT8 b33:1;
 UINT8 b34:1;
 UINT8 b35:1;
 UINT8 b36:1;
 UINT8 b37:1;
 UINT8 b38:1;
 UINT8 b39:1;
 UINT8 b40:1;
 UINT8 b41:1;
 UINT8 b42:1;
 UINT8 b43:1;
 UINT8 b44:1;
 UINT8 b45:1;
 UINT8 b46:1;
 UINT8 b47:1;
 UINT8 b48:1;
 UINT8 b49:1;
 UINT8 b50:1;
 UINT8 b51:1;
 UINT8 b52:1;
 UINT8 b53:1;
 UINT8 b54:1;
 UINT8 b55:1;
 UINT8 b56:1;
 UINT8 b57:1;
 UINT8 b58:1;
 UINT8 b59:1;
 UINT8 b60:1;
 UINT8 b61:1;
 UINT8 b62:1;
 UINT8 b63:1;
} bits;
} UINT64_VAL;

# 336
typedef void VOID;

typedef char CHAR8;
typedef unsigned char UCHAR8;

typedef unsigned char BYTE;
typedef unsigned short int WORD;
typedef unsigned long DWORD;


typedef unsigned long long QWORD;
typedef signed char CHAR;
typedef signed short int SHORT;
typedef signed long LONG;


typedef signed long long LONGLONG;
typedef union
{
BYTE Val;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
} bits;
} BYTE_VAL, BYTE_BITS;

typedef union
{
WORD Val;
BYTE v[2] ;
struct 
{
BYTE LB;
BYTE HB;
} byte;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
} bits;
} WORD_VAL, WORD_BITS;

typedef union
{
DWORD Val;
WORD w[2] ;
BYTE v[4] ;
struct 
{
WORD LW;
WORD HW;
} word;
struct 
{
BYTE LB;
BYTE HB;
BYTE UB;
BYTE MB;
} byte;
struct 
{
WORD_VAL low;
WORD_VAL high;
}wordUnion;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
 BYTE b16:1;
 BYTE b17:1;
 BYTE b18:1;
 BYTE b19:1;
 BYTE b20:1;
 BYTE b21:1;
 BYTE b22:1;
 BYTE b23:1;
 BYTE b24:1;
 BYTE b25:1;
 BYTE b26:1;
 BYTE b27:1;
 BYTE b28:1;
 BYTE b29:1;
 BYTE b30:1;
 BYTE b31:1;
} bits;
} DWORD_VAL;


typedef union
{
QWORD Val;
DWORD d[2] ;
WORD w[4] ;
BYTE v[8] ;
struct 
{
DWORD LD;
DWORD HD;
} dword;
struct 
{
WORD LW;
WORD HW;
WORD UW;
WORD MW;
} word;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
 BYTE b16:1;
 BYTE b17:1;
 BYTE b18:1;
 BYTE b19:1;
 BYTE b20:1;
 BYTE b21:1;
 BYTE b22:1;
 BYTE b23:1;
 BYTE b24:1;
 BYTE b25:1;
 BYTE b26:1;
 BYTE b27:1;
 BYTE b28:1;
 BYTE b29:1;
 BYTE b30:1;
 BYTE b31:1;
 BYTE b32:1;
 BYTE b33:1;
 BYTE b34:1;
 BYTE b35:1;
 BYTE b36:1;
 BYTE b37:1;
 BYTE b38:1;
 BYTE b39:1;
 BYTE b40:1;
 BYTE b41:1;
 BYTE b42:1;
 BYTE b43:1;
 BYTE b44:1;
 BYTE b45:1;
 BYTE b46:1;
 BYTE b47:1;
 BYTE b48:1;
 BYTE b49:1;
 BYTE b50:1;
 BYTE b51:1;
 BYTE b52:1;
 BYTE b53:1;
 BYTE b54:1;
 BYTE b55:1;
 BYTE b56:1;
 BYTE b57:1;
 BYTE b58:1;
 BYTE b59:1;
 BYTE b60:1;
 BYTE b61:1;
 BYTE b62:1;
 BYTE b63:1;
} bits;
} QWORD_VAL;

# 320 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f4550.h"
extern volatile unsigned char SPPDATA @ 0xF62;



extern volatile unsigned char SPPCFG @ 0xF63;

extern volatile bit CLK1EN @ ((unsigned)&SPPCFG*8)+4;
extern volatile bit CSEN @ ((unsigned)&SPPCFG*8)+5;
extern volatile bit WS0 @ ((unsigned)&SPPCFG*8)+0;
extern volatile bit WS1 @ ((unsigned)&SPPCFG*8)+1;
extern volatile bit WS2 @ ((unsigned)&SPPCFG*8)+2;
extern volatile bit WS3 @ ((unsigned)&SPPCFG*8)+3;
extern volatile bit CLKCFG0 @ ((unsigned)&SPPCFG*8)+6;
extern volatile bit CLKCFG1 @ ((unsigned)&SPPCFG*8)+7;
extern union {
struct {
volatile unsigned WS : 4;
volatile unsigned CLK1EN : 1;
volatile unsigned CSEN : 1;
volatile unsigned CLKCFG : 2;
};
struct {
volatile unsigned WS0 : 1;
volatile unsigned WS1 : 1;
volatile unsigned WS2 : 1;
volatile unsigned WS3 : 1;
volatile unsigned : 2;
volatile unsigned CLKCFG0 : 1;
volatile unsigned CLKCFG1 : 1;
};
} SPPCFGbits @ 0xF63;


extern volatile unsigned char SPPEPS @ 0xF64;

extern volatile bit SPPBUSY @ ((unsigned)&SPPEPS*8)+4;
extern volatile bit WRSPP @ ((unsigned)&SPPEPS*8)+6;
extern volatile bit RDSPP @ ((unsigned)&SPPEPS*8)+7;




extern union {
struct {
volatile unsigned ADDR : 4;
volatile unsigned SPPBUSY : 1;
volatile unsigned : 1;
volatile unsigned WRSPP : 1;
volatile unsigned RDSPP : 1;
};
struct {
volatile unsigned ADDR0 : 1;
volatile unsigned ADDR1 : 1;
volatile unsigned ADDR2 : 1;
volatile unsigned ADDR3 : 1;
};
} SPPEPSbits @ 0xF64;


extern volatile unsigned char SPPCON @ 0xF65;

extern volatile bit SPPEN @ ((unsigned)&SPPCON*8)+0;
extern volatile bit SPPOWN @ ((unsigned)&SPPCON*8)+1;
extern union {
struct {
volatile unsigned SPPEN : 1;
volatile unsigned SPPOWN : 1;
};
} SPPCONbits @ 0xF65;



extern volatile unsigned char UFRML @ 0xF66;

extern volatile bit FRM0 @ ((unsigned)&UFRML*8)+0;
extern volatile bit FRM1 @ ((unsigned)&UFRML*8)+1;
extern volatile bit FRM2 @ ((unsigned)&UFRML*8)+2;
extern volatile bit FRM3 @ ((unsigned)&UFRML*8)+3;
extern volatile bit FRM4 @ ((unsigned)&UFRML*8)+4;
extern volatile bit FRM5 @ ((unsigned)&UFRML*8)+5;
extern volatile bit FRM6 @ ((unsigned)&UFRML*8)+6;
extern volatile bit FRM7 @ ((unsigned)&UFRML*8)+7;
extern union {
struct {
volatile unsigned FRM0 : 1;
volatile unsigned FRM1 : 1;
volatile unsigned FRM2 : 1;
volatile unsigned FRM3 : 1;
volatile unsigned FRM4 : 1;
volatile unsigned FRM5 : 1;
volatile unsigned FRM6 : 1;
volatile unsigned FRM7 : 1;
};
} UFRMLbits @ 0xF66;


extern volatile unsigned char UFRMH @ 0xF67;

extern volatile bit FRM8 @ ((unsigned)&UFRMH*8)+0;
extern volatile bit FRM9 @ ((unsigned)&UFRMH*8)+1;
extern volatile bit FRM10 @ ((unsigned)&UFRMH*8)+2;
extern union {
struct {
volatile unsigned FRM : 3;
};
struct {
volatile unsigned FRM8 : 1;
volatile unsigned FRM9 : 1;
volatile unsigned FRM10 : 1;
};
} UFRMHbits @ 0xF67;


extern volatile unsigned int UFRM @ 0xF66;


extern volatile unsigned char UIR @ 0xF68;

extern volatile bit URSTIF @ ((unsigned)&UIR*8)+0;
extern volatile bit UERRIF @ ((unsigned)&UIR*8)+1;
extern volatile bit ACTVIF @ ((unsigned)&UIR*8)+2;
extern volatile bit TRNIF @ ((unsigned)&UIR*8)+3;
extern volatile bit IDLEIF @ ((unsigned)&UIR*8)+4;
extern volatile bit STALLIF @ ((unsigned)&UIR*8)+5;
extern volatile bit SOFIF @ ((unsigned)&UIR*8)+6;
extern union {
struct {
volatile unsigned URSTIF : 1;
volatile unsigned UERRIF : 1;
volatile unsigned ACTVIF : 1;
volatile unsigned TRNIF : 1;
volatile unsigned IDLEIF : 1;
volatile unsigned STALLIF : 1;
volatile unsigned SOFIF : 1;
};
} UIRbits @ 0xF68;


extern volatile unsigned char UIE @ 0xF69;

extern volatile bit URSTIE @ ((unsigned)&UIE*8)+0;
extern volatile bit UERRIE @ ((unsigned)&UIE*8)+1;
extern volatile bit ACTVIE @ ((unsigned)&UIE*8)+2;
extern volatile bit TRNIE @ ((unsigned)&UIE*8)+3;
extern volatile bit IDLEIE @ ((unsigned)&UIE*8)+4;
extern volatile bit STALLIE @ ((unsigned)&UIE*8)+5;
extern volatile bit SOFIE @ ((unsigned)&UIE*8)+6;
extern union {
struct {
volatile unsigned URSTIE : 1;
volatile unsigned UERRIE : 1;
volatile unsigned ACTVIE : 1;
volatile unsigned TRNIE : 1;
volatile unsigned IDLEIE : 1;
volatile unsigned STALLIE : 1;
volatile unsigned SOFIE : 1;
};
} UIEbits @ 0xF69;


extern volatile unsigned char UEIR @ 0xF6A;

extern volatile bit PIDEF @ ((unsigned)&UEIR*8)+0;
extern volatile bit CRC5EF @ ((unsigned)&UEIR*8)+1;
extern volatile bit CRC16EF @ ((unsigned)&UEIR*8)+2;
extern volatile bit DFN8EF @ ((unsigned)&UEIR*8)+3;
extern volatile bit BTOEF @ ((unsigned)&UEIR*8)+4;
extern volatile bit BTSEF @ ((unsigned)&UEIR*8)+7;
extern union {
struct {
volatile unsigned PIDEF : 1;
volatile unsigned CRC5EF : 1;
volatile unsigned CRC16EF : 1;
volatile unsigned DFN8EF : 1;
volatile unsigned BTOEF : 1;
volatile unsigned : 2;
volatile unsigned BTSEF : 1;
};
} UEIRbits @ 0xF6A;


extern volatile unsigned char UEIE @ 0xF6B;

extern volatile bit PIDEE @ ((unsigned)&UEIE*8)+0;
extern volatile bit CRC5EE @ ((unsigned)&UEIE*8)+1;
extern volatile bit CRC16EE @ ((unsigned)&UEIE*8)+2;
extern volatile bit DFN8EE @ ((unsigned)&UEIE*8)+3;
extern volatile bit BTOEE @ ((unsigned)&UEIE*8)+4;
extern volatile bit BTSEE @ ((unsigned)&UEIE*8)+7;
extern union {
struct {
volatile unsigned PIDEE : 1;
volatile unsigned CRC5EE : 1;
volatile unsigned CRC16EE : 1;
volatile unsigned DFN8EE : 1;
volatile unsigned BTOEE : 1;
volatile unsigned : 2;
volatile unsigned BTSEE : 1;
};
} UEIEbits @ 0xF6B;


extern volatile unsigned char USTAT @ 0xF6C;

extern volatile bit PPBI @ ((unsigned)&USTAT*8)+1;
extern volatile bit DIR @ ((unsigned)&USTAT*8)+2;
extern volatile bit ENDP0 @ ((unsigned)&USTAT*8)+3;
extern volatile bit ENDP1 @ ((unsigned)&USTAT*8)+4;
extern volatile bit ENDP2 @ ((unsigned)&USTAT*8)+5;
extern volatile bit ENDP3 @ ((unsigned)&USTAT*8)+6;
extern union {
struct {
volatile unsigned : 1;
volatile unsigned PPBI : 1;
volatile unsigned DIR : 1;
volatile unsigned ENDP : 4;
};
struct {
volatile unsigned : 3;
volatile unsigned ENDP0 : 1;
volatile unsigned ENDP1 : 1;
volatile unsigned ENDP2 : 1;
volatile unsigned ENDP3 : 1;
};
} USTATbits @ 0xF6C;


extern volatile unsigned char UCON @ 0xF6D;

extern volatile bit SUSPND @ ((unsigned)&UCON*8)+1;
extern volatile bit RESUME @ ((unsigned)&UCON*8)+2;
extern volatile bit USBEN @ ((unsigned)&UCON*8)+3;
extern volatile bit PKTDIS @ ((unsigned)&UCON*8)+4;
extern volatile bit SE0 @ ((unsigned)&UCON*8)+5;
extern volatile bit PPBRST @ ((unsigned)&UCON*8)+6;
extern union {
struct {
volatile unsigned : 1;
volatile unsigned SUSPND : 1;
volatile unsigned RESUME : 1;
volatile unsigned USBEN : 1;
volatile unsigned PKTDIS : 1;
volatile unsigned SE0 : 1;
volatile unsigned PPBRST : 1;
};
} UCONbits @ 0xF6D;


extern volatile unsigned char UADDR @ 0xF6E;

# 574
extern volatile bit ADDR4 @ ((unsigned)&UADDR*8)+4;
extern volatile bit ADDR5 @ ((unsigned)&UADDR*8)+5;
extern volatile bit ADDR6 @ ((unsigned)&UADDR*8)+6;
extern union {
struct {
volatile unsigned ADDR : 7;
};
struct {
volatile unsigned ADDR0 : 1;
volatile unsigned ADDR1 : 1;
volatile unsigned ADDR2 : 1;
volatile unsigned ADDR3 : 1;
volatile unsigned ADDR4 : 1;
volatile unsigned ADDR5 : 1;
volatile unsigned ADDR6 : 1;
};
} UADDRbits @ 0xF6E;


extern volatile unsigned char UCFG @ 0xF6F;

extern volatile bit FSEN @ ((unsigned)&UCFG*8)+2;
extern volatile bit UTRDIS @ ((unsigned)&UCFG*8)+3;
extern volatile bit UPUEN @ ((unsigned)&UCFG*8)+4;
extern volatile bit UOEMON @ ((unsigned)&UCFG*8)+6;
extern volatile bit UTEYE @ ((unsigned)&UCFG*8)+7;
extern volatile bit PPB0 @ ((unsigned)&UCFG*8)+0;
extern volatile bit PPB1 @ ((unsigned)&UCFG*8)+1;
extern union {
struct {
volatile unsigned PPB : 2;
volatile unsigned FSEN : 1;
volatile unsigned UTRDIS : 1;
volatile unsigned UPUEN : 1;
volatile unsigned : 1;
volatile unsigned UOEMON : 1;
volatile unsigned UTEYE : 1;
};
struct {
volatile unsigned PPB0 : 1;
volatile unsigned PPB1 : 1;
};
} UCFGbits @ 0xF6F;


extern volatile unsigned char UEP0 @ 0xF70;

# 626
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP0bits @ 0xF70;


extern volatile unsigned char UEP1 @ 0xF71;

# 644
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP1bits @ 0xF71;


extern volatile unsigned char UEP2 @ 0xF72;

# 662
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP2bits @ 0xF72;


extern volatile unsigned char UEP3 @ 0xF73;

# 680
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP3bits @ 0xF73;


extern volatile unsigned char UEP4 @ 0xF74;

# 698
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP4bits @ 0xF74;


extern volatile unsigned char UEP5 @ 0xF75;

# 716
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP5bits @ 0xF75;


extern volatile unsigned char UEP6 @ 0xF76;

# 734
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP6bits @ 0xF76;


extern volatile unsigned char UEP7 @ 0xF77;

# 752
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP7bits @ 0xF77;


extern volatile unsigned char UEP8 @ 0xF78;

# 770
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP8bits @ 0xF78;


extern volatile unsigned char UEP9 @ 0xF79;

# 788
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP9bits @ 0xF79;


extern volatile unsigned char UEP10 @ 0xF7A;

# 806
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP10bits @ 0xF7A;


extern volatile unsigned char UEP11 @ 0xF7B;

# 824
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP11bits @ 0xF7B;


extern volatile unsigned char UEP12 @ 0xF7C;

# 842
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP12bits @ 0xF7C;


extern volatile unsigned char UEP13 @ 0xF7D;

# 860
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP13bits @ 0xF7D;


extern volatile unsigned char UEP14 @ 0xF7E;

# 878
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP14bits @ 0xF7E;


extern volatile unsigned char UEP15 @ 0xF7F;

# 896
extern union {
struct {
volatile unsigned EPSTALL : 1;
volatile unsigned EPINEN : 1;
volatile unsigned EPOUTEN : 1;
volatile unsigned EPCONDIS : 1;
volatile unsigned EPHSHK : 1;
};
} UEP15bits @ 0xF7F;


extern volatile unsigned char PORTA @ 0xF80;

# 916
extern volatile bit AN0 @ ((unsigned)&PORTA*8)+0;
extern volatile bit AN1 @ ((unsigned)&PORTA*8)+1;
extern volatile bit AN2 @ ((unsigned)&PORTA*8)+2;
extern volatile bit AN3 @ ((unsigned)&PORTA*8)+3;
extern volatile bit T0CKI @ ((unsigned)&PORTA*8)+4;
extern volatile bit AN4 @ ((unsigned)&PORTA*8)+5;
extern volatile bit OSC2 @ ((unsigned)&PORTA*8)+6;
extern volatile bit VREFM @ ((unsigned)&PORTA*8)+2;
extern volatile bit VREFP @ ((unsigned)&PORTA*8)+3;
extern volatile bit LVDIN @ ((unsigned)&PORTA*8)+5;
extern volatile bit HLVDIN @ ((unsigned)&PORTA*8)+5;
extern union {
struct {
volatile unsigned RA0 : 1;
volatile unsigned RA1 : 1;
volatile unsigned RA2 : 1;
volatile unsigned RA3 : 1;
volatile unsigned RA4 : 1;
volatile unsigned RA5 : 1;
volatile unsigned RA6 : 1;
};
struct {
volatile unsigned AN0 : 1;
volatile unsigned AN1 : 1;
volatile unsigned AN2 : 1;
volatile unsigned AN3 : 1;
volatile unsigned T0CKI : 1;
volatile unsigned AN4 : 1;
volatile unsigned OSC2 : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned VREFM : 1;
volatile unsigned VREFP : 1;
volatile unsigned : 1;
volatile unsigned LVDIN : 1;
};
struct {
volatile unsigned : 5;
volatile unsigned HLVDIN : 1;
};
} PORTAbits @ 0xF80;


extern volatile unsigned char PORTB @ 0xF81;

# 970
extern volatile bit INT0 @ ((unsigned)&PORTB*8)+0;
extern volatile bit INT1 @ ((unsigned)&PORTB*8)+1;
extern volatile bit INT2 @ ((unsigned)&PORTB*8)+2;
extern volatile bit PGM @ ((unsigned)&PORTB*8)+5;
extern volatile bit PGC @ ((unsigned)&PORTB*8)+6;
extern volatile bit PGD @ ((unsigned)&PORTB*8)+7;
extern union {
struct {
volatile unsigned RB0 : 1;
volatile unsigned RB1 : 1;
volatile unsigned RB2 : 1;
volatile unsigned RB3 : 1;
volatile unsigned RB4 : 1;
volatile unsigned RB5 : 1;
volatile unsigned RB6 : 1;
volatile unsigned RB7 : 1;
};
struct {
volatile unsigned INT0 : 1;
volatile unsigned INT1 : 1;
volatile unsigned INT2 : 1;
volatile unsigned : 2;
volatile unsigned PGM : 1;
volatile unsigned PGC : 1;
volatile unsigned PGD : 1;
};
} PORTBbits @ 0xF81;


extern volatile unsigned char PORTC @ 0xF82;




extern volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
extern volatile bit RC5 @ ((unsigned)&PORTC*8)+5;


extern volatile bit T1OSO @ ((unsigned)&PORTC*8)+0;
extern volatile bit T1OSI @ ((unsigned)&PORTC*8)+1;
extern volatile bit CCP1 @ ((unsigned)&PORTC*8)+2;
extern volatile bit TX @ ((unsigned)&PORTC*8)+6;
extern volatile bit RX @ ((unsigned)&PORTC*8)+7;
extern volatile bit T13CKI @ ((unsigned)&PORTC*8)+0;
extern volatile bit P1A @ ((unsigned)&PORTC*8)+2;
extern volatile bit CK @ ((unsigned)&PORTC*8)+6;
extern volatile bit DT @ ((unsigned)&PORTC*8)+7;
extern union {
struct {
volatile unsigned RC0 : 1;
volatile unsigned RC1 : 1;
volatile unsigned RC2 : 1;
volatile unsigned : 1;
volatile unsigned RC4 : 1;
volatile unsigned RC5 : 1;
volatile unsigned RC6 : 1;
volatile unsigned RC7 : 1;
};
struct {
volatile unsigned T1OSO : 1;
volatile unsigned T1OSI : 1;
volatile unsigned CCP1 : 1;
volatile unsigned : 3;
volatile unsigned TX : 1;
volatile unsigned RX : 1;
};
struct {
volatile unsigned T13CKI : 1;
volatile unsigned : 1;
volatile unsigned P1A : 1;
volatile unsigned : 3;
volatile unsigned CK : 1;
volatile unsigned DT : 1;
};
} PORTCbits @ 0xF82;


extern volatile unsigned char PORTD @ 0xF83;

# 1057
extern volatile bit SPP0 @ ((unsigned)&PORTD*8)+0;
extern volatile bit SPP1 @ ((unsigned)&PORTD*8)+1;
extern volatile bit SPP2 @ ((unsigned)&PORTD*8)+2;
extern volatile bit SPP3 @ ((unsigned)&PORTD*8)+3;
extern volatile bit SPP4 @ ((unsigned)&PORTD*8)+4;
extern volatile bit SPP5 @ ((unsigned)&PORTD*8)+5;
extern volatile bit SPP6 @ ((unsigned)&PORTD*8)+6;
extern volatile bit SPP7 @ ((unsigned)&PORTD*8)+7;
extern union {
struct {
volatile unsigned RD0 : 1;
volatile unsigned RD1 : 1;
volatile unsigned RD2 : 1;
volatile unsigned RD3 : 1;
volatile unsigned RD4 : 1;
volatile unsigned RD5 : 1;
volatile unsigned RD6 : 1;
volatile unsigned RD7 : 1;
};
struct {
volatile unsigned SPP0 : 1;
volatile unsigned SPP1 : 1;
volatile unsigned SPP2 : 1;
volatile unsigned SPP3 : 1;
volatile unsigned SPP4 : 1;
volatile unsigned SPP5 : 1;
volatile unsigned SPP6 : 1;
volatile unsigned SPP7 : 1;
};
} PORTDbits @ 0xF83;


extern volatile unsigned char PORTE @ 0xF84;




extern volatile bit RE3 @ ((unsigned)&PORTE*8)+3;
extern volatile bit RDPU @ ((unsigned)&PORTE*8)+7;
extern volatile bit CK1SPP @ ((unsigned)&PORTE*8)+0;
extern volatile bit CK2SPP @ ((unsigned)&PORTE*8)+1;
extern volatile bit OESPP @ ((unsigned)&PORTE*8)+2;
extern union {
struct {
volatile unsigned RE0 : 1;
volatile unsigned RE1 : 1;
volatile unsigned RE2 : 1;
volatile unsigned RE3 : 1;
volatile unsigned : 3;
volatile unsigned RDPU : 1;
};
struct {
volatile unsigned CK1SPP : 1;
volatile unsigned CK2SPP : 1;
volatile unsigned OESPP : 1;
};
} PORTEbits @ 0xF84;


extern volatile unsigned char LATA @ 0xF89;

extern volatile bit LATA0 @ ((unsigned)&LATA*8)+0;
extern volatile bit LATA1 @ ((unsigned)&LATA*8)+1;
extern volatile bit LATA2 @ ((unsigned)&LATA*8)+2;
extern volatile bit LATA3 @ ((unsigned)&LATA*8)+3;
extern volatile bit LATA4 @ ((unsigned)&LATA*8)+4;
extern volatile bit LATA5 @ ((unsigned)&LATA*8)+5;
extern volatile bit LATA6 @ ((unsigned)&LATA*8)+6;
extern union {
struct {
volatile unsigned LATA0 : 1;
volatile unsigned LATA1 : 1;
volatile unsigned LATA2 : 1;
volatile unsigned LATA3 : 1;
volatile unsigned LATA4 : 1;
volatile unsigned LATA5 : 1;
volatile unsigned LATA6 : 1;
};
} LATAbits @ 0xF89;


extern volatile unsigned char LATB @ 0xF8A;

extern volatile bit LATB0 @ ((unsigned)&LATB*8)+0;
extern volatile bit LATB1 @ ((unsigned)&LATB*8)+1;
extern volatile bit LATB2 @ ((unsigned)&LATB*8)+2;
extern volatile bit LATB3 @ ((unsigned)&LATB*8)+3;
extern volatile bit LATB4 @ ((unsigned)&LATB*8)+4;
extern volatile bit LATB5 @ ((unsigned)&LATB*8)+5;
extern volatile bit LATB6 @ ((unsigned)&LATB*8)+6;
extern volatile bit LATB7 @ ((unsigned)&LATB*8)+7;
extern union {
struct {
volatile unsigned LATB0 : 1;
volatile unsigned LATB1 : 1;
volatile unsigned LATB2 : 1;
volatile unsigned LATB3 : 1;
volatile unsigned LATB4 : 1;
volatile unsigned LATB5 : 1;
volatile unsigned LATB6 : 1;
volatile unsigned LATB7 : 1;
};
} LATBbits @ 0xF8A;


extern volatile unsigned char LATC @ 0xF8B;

extern volatile bit LATC0 @ ((unsigned)&LATC*8)+0;
extern volatile bit LATC1 @ ((unsigned)&LATC*8)+1;
extern volatile bit LATC2 @ ((unsigned)&LATC*8)+2;
extern volatile bit LATC6 @ ((unsigned)&LATC*8)+6;
extern volatile bit LATC7 @ ((unsigned)&LATC*8)+7;
extern union {
struct {
volatile unsigned LATC0 : 1;
volatile unsigned LATC1 : 1;
volatile unsigned LATC2 : 1;
volatile unsigned : 3;
volatile unsigned LATC6 : 1;
volatile unsigned LATC7 : 1;
};
} LATCbits @ 0xF8B;


extern volatile unsigned char LATD @ 0xF8C;

extern volatile bit LATD0 @ ((unsigned)&LATD*8)+0;
extern volatile bit LATD1 @ ((unsigned)&LATD*8)+1;
extern volatile bit LATD2 @ ((unsigned)&LATD*8)+2;
extern volatile bit LATD3 @ ((unsigned)&LATD*8)+3;
extern volatile bit LATD4 @ ((unsigned)&LATD*8)+4;
extern volatile bit LATD5 @ ((unsigned)&LATD*8)+5;
extern volatile bit LATD6 @ ((unsigned)&LATD*8)+6;
extern volatile bit LATD7 @ ((unsigned)&LATD*8)+7;
extern union {
struct {
volatile unsigned LATD0 : 1;
volatile unsigned LATD1 : 1;
volatile unsigned LATD2 : 1;
volatile unsigned LATD3 : 1;
volatile unsigned LATD4 : 1;
volatile unsigned LATD5 : 1;
volatile unsigned LATD6 : 1;
volatile unsigned LATD7 : 1;
};
} LATDbits @ 0xF8C;


extern volatile unsigned char LATE @ 0xF8D;

extern volatile bit LATE0 @ ((unsigned)&LATE*8)+0;
extern volatile bit LATE1 @ ((unsigned)&LATE*8)+1;
extern volatile bit LATE2 @ ((unsigned)&LATE*8)+2;
extern union {
struct {
volatile unsigned LATE0 : 1;
volatile unsigned LATE1 : 1;
volatile unsigned LATE2 : 1;
};
} LATEbits @ 0xF8D;


extern volatile unsigned char TRISA @ 0xF92;
extern volatile unsigned char DDRA @ 0xF92;

extern volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
extern volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
extern volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
extern volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
extern volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
extern volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
extern volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;

# 1236
extern union {
struct {
volatile unsigned TRISA0 : 1;
volatile unsigned TRISA1 : 1;
volatile unsigned TRISA2 : 1;
volatile unsigned TRISA3 : 1;
volatile unsigned TRISA4 : 1;
volatile unsigned TRISA5 : 1;
volatile unsigned TRISA6 : 1;
};
struct {
volatile unsigned RA0 : 1;
volatile unsigned RA1 : 1;
volatile unsigned RA2 : 1;
volatile unsigned RA3 : 1;
volatile unsigned RA4 : 1;
volatile unsigned RA5 : 1;
volatile unsigned RA6 : 1;
};
} TRISAbits @ 0xF92;


extern volatile unsigned char TRISB @ 0xF93;
extern volatile unsigned char DDRB @ 0xF93;

extern volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
extern volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
extern volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
extern volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
extern volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
extern volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
extern volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
extern volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;

# 1277
extern union {
struct {
volatile unsigned TRISB0 : 1;
volatile unsigned TRISB1 : 1;
volatile unsigned TRISB2 : 1;
volatile unsigned TRISB3 : 1;
volatile unsigned TRISB4 : 1;
volatile unsigned TRISB5 : 1;
volatile unsigned TRISB6 : 1;
volatile unsigned TRISB7 : 1;
};
struct {
volatile unsigned RB0 : 1;
volatile unsigned RB1 : 1;
volatile unsigned RB2 : 1;
volatile unsigned RB3 : 1;
volatile unsigned RB4 : 1;
volatile unsigned RB5 : 1;
volatile unsigned RB6 : 1;
volatile unsigned RB7 : 1;
};
} TRISBbits @ 0xF93;


extern volatile unsigned char TRISC @ 0xF94;
extern volatile unsigned char DDRC @ 0xF94;

extern volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
extern volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
extern volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
extern volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
extern volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;

# 1314
extern union {
struct {
volatile unsigned TRISC0 : 1;
volatile unsigned TRISC1 : 1;
volatile unsigned TRISC2 : 1;
volatile unsigned : 3;
volatile unsigned TRISC6 : 1;
volatile unsigned TRISC7 : 1;
};
struct {
volatile unsigned RC0 : 1;
volatile unsigned RC1 : 1;
volatile unsigned RC2 : 1;
volatile unsigned : 3;
volatile unsigned RC6 : 1;
volatile unsigned RC7 : 1;
};
} TRISCbits @ 0xF94;


extern volatile unsigned char TRISD @ 0xF95;
extern volatile unsigned char DDRD @ 0xF95;

extern volatile bit TRISD0 @ ((unsigned)&TRISD*8)+0;
extern volatile bit TRISD1 @ ((unsigned)&TRISD*8)+1;
extern volatile bit TRISD2 @ ((unsigned)&TRISD*8)+2;
extern volatile bit TRISD3 @ ((unsigned)&TRISD*8)+3;
extern volatile bit TRISD4 @ ((unsigned)&TRISD*8)+4;
extern volatile bit TRISD5 @ ((unsigned)&TRISD*8)+5;
extern volatile bit TRISD6 @ ((unsigned)&TRISD*8)+6;
extern volatile bit TRISD7 @ ((unsigned)&TRISD*8)+7;

# 1353
extern union {
struct {
volatile unsigned TRISD0 : 1;
volatile unsigned TRISD1 : 1;
volatile unsigned TRISD2 : 1;
volatile unsigned TRISD3 : 1;
volatile unsigned TRISD4 : 1;
volatile unsigned TRISD5 : 1;
volatile unsigned TRISD6 : 1;
volatile unsigned TRISD7 : 1;
};
struct {
volatile unsigned RD0 : 1;
volatile unsigned RD1 : 1;
volatile unsigned RD2 : 1;
volatile unsigned RD3 : 1;
volatile unsigned RD4 : 1;
volatile unsigned RD5 : 1;
volatile unsigned RD6 : 1;
volatile unsigned RD7 : 1;
};
} TRISDbits @ 0xF95;


extern volatile unsigned char TRISE @ 0xF96;
extern volatile unsigned char DDRE @ 0xF96;

extern volatile bit TRISE0 @ ((unsigned)&TRISE*8)+0;
extern volatile bit TRISE1 @ ((unsigned)&TRISE*8)+1;
extern volatile bit TRISE2 @ ((unsigned)&TRISE*8)+2;



extern union {
struct {
volatile unsigned TRISE0 : 1;
volatile unsigned TRISE1 : 1;
volatile unsigned TRISE2 : 1;
};
struct {
volatile unsigned RE0 : 1;
volatile unsigned RE1 : 1;
volatile unsigned RE2 : 1;
};
} TRISEbits @ 0xF96;


extern volatile unsigned char OSCTUNE @ 0xF9B;

extern volatile bit INTSRC @ ((unsigned)&OSCTUNE*8)+7;
extern volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
extern volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
extern volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
extern volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
extern volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;
extern union {
struct {
volatile unsigned TUN : 5;
volatile unsigned : 2;
volatile unsigned INTSRC : 1;
};
struct {
volatile unsigned TUN0 : 1;
volatile unsigned TUN1 : 1;
volatile unsigned TUN2 : 1;
volatile unsigned TUN3 : 1;
volatile unsigned TUN4 : 1;
};
} OSCTUNEbits @ 0xF9B;


extern volatile unsigned char PIE1 @ 0xF9D;

extern volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
extern volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
extern volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
extern volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
extern volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
extern volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
extern volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
extern volatile bit SPPIE @ ((unsigned)&PIE1*8)+7;
extern union {
struct {
volatile unsigned TMR1IE : 1;
volatile unsigned TMR2IE : 1;
volatile unsigned CCP1IE : 1;
volatile unsigned SSPIE : 1;
volatile unsigned TXIE : 1;
volatile unsigned RCIE : 1;
volatile unsigned ADIE : 1;
volatile unsigned SPPIE : 1;
};
} PIE1bits @ 0xF9D;


extern volatile unsigned char PIR1 @ 0xF9E;

extern volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
extern volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
extern volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
extern volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
extern volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
extern volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
extern volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
extern volatile bit SPPIF @ ((unsigned)&PIR1*8)+7;
extern union {
struct {
volatile unsigned TMR1IF : 1;
volatile unsigned TMR2IF : 1;
volatile unsigned CCP1IF : 1;
volatile unsigned SSPIF : 1;
volatile unsigned TXIF : 1;
volatile unsigned RCIF : 1;
volatile unsigned ADIF : 1;
volatile unsigned SPPIF : 1;
};
} PIR1bits @ 0xF9E;


extern volatile unsigned char IPR1 @ 0xF9F;

extern volatile bit TMR1IP @ ((unsigned)&IPR1*8)+0;
extern volatile bit TMR2IP @ ((unsigned)&IPR1*8)+1;
extern volatile bit CCP1IP @ ((unsigned)&IPR1*8)+2;
extern volatile bit SSPIP @ ((unsigned)&IPR1*8)+3;
extern volatile bit TXIP @ ((unsigned)&IPR1*8)+4;
extern volatile bit RCIP @ ((unsigned)&IPR1*8)+5;
extern volatile bit ADIP @ ((unsigned)&IPR1*8)+6;
extern volatile bit SPPIP @ ((unsigned)&IPR1*8)+7;
extern union {
struct {
volatile unsigned TMR1IP : 1;
volatile unsigned TMR2IP : 1;
volatile unsigned CCP1IP : 1;
volatile unsigned SSPIP : 1;
volatile unsigned TXIP : 1;
volatile unsigned RCIP : 1;
volatile unsigned ADIP : 1;
volatile unsigned SPPIP : 1;
};
} IPR1bits @ 0xF9F;


extern volatile unsigned char PIE2 @ 0xFA0;

extern volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;
extern volatile bit TMR3IE @ ((unsigned)&PIE2*8)+1;
extern volatile bit HLVDIE @ ((unsigned)&PIE2*8)+2;
extern volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
extern volatile bit EEIE @ ((unsigned)&PIE2*8)+4;
extern volatile bit USBIE @ ((unsigned)&PIE2*8)+5;
extern volatile bit CMIE @ ((unsigned)&PIE2*8)+6;
extern volatile bit OSCFIE @ ((unsigned)&PIE2*8)+7;
extern volatile bit LVDIE @ ((unsigned)&PIE2*8)+2;
extern union {
struct {
volatile unsigned CCP2IE : 1;
volatile unsigned TMR3IE : 1;
volatile unsigned HLVDIE : 1;
volatile unsigned BCLIE : 1;
volatile unsigned EEIE : 1;
volatile unsigned USBIE : 1;
volatile unsigned CMIE : 1;
volatile unsigned OSCFIE : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned LVDIE : 1;
};
} PIE2bits @ 0xFA0;


extern volatile unsigned char PIR2 @ 0xFA1;

extern volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
extern volatile bit TMR3IF @ ((unsigned)&PIR2*8)+1;
extern volatile bit HLVDIF @ ((unsigned)&PIR2*8)+2;
extern volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
extern volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
extern volatile bit USBIF @ ((unsigned)&PIR2*8)+5;
extern volatile bit CMIF @ ((unsigned)&PIR2*8)+6;
extern volatile bit OSCFIF @ ((unsigned)&PIR2*8)+7;
extern volatile bit LVDIF @ ((unsigned)&PIR2*8)+2;
extern union {
struct {
volatile unsigned CCP2IF : 1;
volatile unsigned TMR3IF : 1;
volatile unsigned HLVDIF : 1;
volatile unsigned BCLIF : 1;
volatile unsigned EEIF : 1;
volatile unsigned USBIF : 1;
volatile unsigned CMIF : 1;
volatile unsigned OSCFIF : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned LVDIF : 1;
};
} PIR2bits @ 0xFA1;


extern volatile unsigned char IPR2 @ 0xFA2;

extern volatile bit CCP2IP @ ((unsigned)&IPR2*8)+0;
extern volatile bit TMR3IP @ ((unsigned)&IPR2*8)+1;
extern volatile bit HLVDIP @ ((unsigned)&IPR2*8)+2;
extern volatile bit BCLIP @ ((unsigned)&IPR2*8)+3;
extern volatile bit EEIP @ ((unsigned)&IPR2*8)+4;
extern volatile bit USBIP @ ((unsigned)&IPR2*8)+5;
extern volatile bit CMIP @ ((unsigned)&IPR2*8)+6;
extern volatile bit OSCFIP @ ((unsigned)&IPR2*8)+7;
extern volatile bit LVDIP @ ((unsigned)&IPR2*8)+2;
extern union {
struct {
volatile unsigned CCP2IP : 1;
volatile unsigned TMR3IP : 1;
volatile unsigned HLVDIP : 1;
volatile unsigned BCLIP : 1;
volatile unsigned EEIP : 1;
volatile unsigned USBIP : 1;
volatile unsigned CMIP : 1;
volatile unsigned OSCFIP : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned LVDIP : 1;
};
} IPR2bits @ 0xFA2;


extern volatile unsigned char EECON1 @ 0xFA6;

extern volatile bit RD @ ((unsigned)&EECON1*8)+0;
extern volatile bit WR @ ((unsigned)&EECON1*8)+1;
extern volatile bit WREN @ ((unsigned)&EECON1*8)+2;
extern volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
extern volatile bit FREE @ ((unsigned)&EECON1*8)+4;
extern volatile bit CFGS @ ((unsigned)&EECON1*8)+6;
extern volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
extern union {
struct {
volatile unsigned RD : 1;
volatile unsigned WR : 1;
volatile unsigned WREN : 1;
volatile unsigned WRERR : 1;
volatile unsigned FREE : 1;
volatile unsigned : 1;
volatile unsigned CFGS : 1;
volatile unsigned EEPGD : 1;
};
} EECON1bits @ 0xFA6;


extern volatile unsigned char EECON2 @ 0xFA7;



extern volatile unsigned char EEDATA @ 0xFA8;



extern volatile unsigned char EEADR @ 0xFA9;



extern volatile unsigned char RCSTA @ 0xFAB;

extern volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
extern volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
extern volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
extern volatile bit ADDEN @ ((unsigned)&RCSTA*8)+3;
extern volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
extern volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
extern volatile bit RX9 @ ((unsigned)&RCSTA*8)+6;
extern volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
extern volatile bit ADEN @ ((unsigned)&RCSTA*8)+3;
extern union {
struct {
volatile unsigned RX9D : 1;
volatile unsigned OERR : 1;
volatile unsigned FERR : 1;
volatile unsigned ADDEN : 1;
volatile unsigned CREN : 1;
volatile unsigned SREN : 1;
volatile unsigned RX9 : 1;
volatile unsigned SPEN : 1;
};
struct {
volatile unsigned : 3;
volatile unsigned ADEN : 1;
};
} RCSTAbits @ 0xFAB;


extern volatile unsigned char TXSTA @ 0xFAC;

extern volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
extern volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
extern volatile bit BRGH @ ((unsigned)&TXSTA*8)+2;
extern volatile bit SENDB @ ((unsigned)&TXSTA*8)+3;
extern volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
extern volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
extern volatile bit TX9 @ ((unsigned)&TXSTA*8)+6;
extern volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
extern union {
struct {
volatile unsigned TX9D : 1;
volatile unsigned TRMT : 1;
volatile unsigned BRGH : 1;
volatile unsigned SENDB : 1;
volatile unsigned SYNC : 1;
volatile unsigned TXEN : 1;
volatile unsigned TX9 : 1;
volatile unsigned CSRC : 1;
};
} TXSTAbits @ 0xFAC;


extern volatile unsigned char TXREG @ 0xFAD;



extern volatile unsigned char RCREG @ 0xFAE;



extern volatile unsigned char SPBRG @ 0xFAF;



extern volatile unsigned char SPBRGH @ 0xFB0;



extern volatile unsigned char T3CON @ 0xFB1;

extern volatile bit TMR3ON @ ((unsigned)&T3CON*8)+0;
extern volatile bit TMR3CS @ ((unsigned)&T3CON*8)+1;
extern volatile bit nT3SYNC @ ((unsigned)&T3CON*8)+2;
extern volatile bit T3CCP1 @ ((unsigned)&T3CON*8)+3;
extern volatile bit T3CCP2 @ ((unsigned)&T3CON*8)+6;

extern volatile bit T3SYNC @ ((unsigned)&T3CON*8)+2;
extern volatile bit T3CKPS0 @ ((unsigned)&T3CON*8)+4;
extern volatile bit T3CKPS1 @ ((unsigned)&T3CON*8)+5;
extern volatile bit T3NSYNC @ ((unsigned)&T3CON*8)+2;
extern union {
struct {
volatile unsigned TMR3ON : 1;
volatile unsigned TMR3CS : 1;
volatile unsigned nT3SYNC : 1;
volatile unsigned T3CCP1 : 1;
volatile unsigned T3CKPS : 2;
volatile unsigned T3CCP2 : 1;
volatile unsigned RD16 : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned T3SYNC : 1;
volatile unsigned : 1;
volatile unsigned T3CKPS0 : 1;
volatile unsigned T3CKPS1 : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned T3NSYNC : 1;
};
} T3CONbits @ 0xFB1;



extern volatile unsigned char TMR3L @ 0xFB2;



extern volatile unsigned char TMR3H @ 0xFB3;



extern volatile unsigned int TMR3 @ 0xFB2;


extern volatile unsigned char CMCON @ 0xFB4;

extern volatile bit CIS @ ((unsigned)&CMCON*8)+3;
extern volatile bit C1INV @ ((unsigned)&CMCON*8)+4;
extern volatile bit C2INV @ ((unsigned)&CMCON*8)+5;
extern volatile bit C1OUT @ ((unsigned)&CMCON*8)+6;
extern volatile bit C2OUT @ ((unsigned)&CMCON*8)+7;
extern volatile bit CM0 @ ((unsigned)&CMCON*8)+0;
extern volatile bit CM1 @ ((unsigned)&CMCON*8)+1;
extern volatile bit CM2 @ ((unsigned)&CMCON*8)+2;
extern union {
struct {
volatile unsigned CM : 3;
volatile unsigned CIS : 1;
volatile unsigned C1INV : 1;
volatile unsigned C2INV : 1;
volatile unsigned C1OUT : 1;
volatile unsigned C2OUT : 1;
};
struct {
volatile unsigned CM0 : 1;
volatile unsigned CM1 : 1;
volatile unsigned CM2 : 1;
};
} CMCONbits @ 0xFB4;


extern volatile unsigned char CVRCON @ 0xFB5;

extern volatile bit CVRSS @ ((unsigned)&CVRCON*8)+4;
extern volatile bit CVRR @ ((unsigned)&CVRCON*8)+5;
extern volatile bit CVROE @ ((unsigned)&CVRCON*8)+6;
extern volatile bit CVREN @ ((unsigned)&CVRCON*8)+7;
extern volatile bit CVR0 @ ((unsigned)&CVRCON*8)+0;
extern volatile bit CVR1 @ ((unsigned)&CVRCON*8)+1;
extern volatile bit CVR2 @ ((unsigned)&CVRCON*8)+2;
extern volatile bit CVR3 @ ((unsigned)&CVRCON*8)+3;
extern volatile bit CVREF @ ((unsigned)&CVRCON*8)+4;
extern union {
struct {
volatile unsigned CVR : 4;
volatile unsigned CVRSS : 1;
volatile unsigned CVRR : 1;
volatile unsigned CVROE : 1;
volatile unsigned CVREN : 1;
};
struct {
volatile unsigned CVR0 : 1;
volatile unsigned CVR1 : 1;
volatile unsigned CVR2 : 1;
volatile unsigned CVR3 : 1;
volatile unsigned CVREF : 1;
};
} CVRCONbits @ 0xFB5;


extern volatile unsigned char ECCP1AS @ 0xFB6;
extern volatile unsigned char CCP1AS @ 0xFB6;

extern volatile bit ECCPASE @ ((unsigned)&ECCP1AS*8)+7;
extern volatile bit PSSBD0 @ ((unsigned)&ECCP1AS*8)+0;
extern volatile bit PSSBD1 @ ((unsigned)&ECCP1AS*8)+1;
extern volatile bit PSSAC0 @ ((unsigned)&ECCP1AS*8)+2;
extern volatile bit PSSAC1 @ ((unsigned)&ECCP1AS*8)+3;
extern volatile bit ECCPAS0 @ ((unsigned)&ECCP1AS*8)+4;
extern volatile bit ECCPAS1 @ ((unsigned)&ECCP1AS*8)+5;
extern volatile bit ECCPAS2 @ ((unsigned)&ECCP1AS*8)+6;
extern union {
struct {
volatile unsigned PSSBD : 2;
volatile unsigned PSSAC : 2;
volatile unsigned ECCPAS : 3;
volatile unsigned ECCPASE : 1;
};
struct {
volatile unsigned PSSBD0 : 1;
volatile unsigned PSSBD1 : 1;
volatile unsigned PSSAC0 : 1;
volatile unsigned PSSAC1 : 1;
volatile unsigned ECCPAS0 : 1;
volatile unsigned ECCPAS1 : 1;
volatile unsigned ECCPAS2 : 1;
};
} ECCP1ASbits @ 0xFB6;


extern volatile unsigned char ECCP1DEL @ 0xFB7;
extern volatile unsigned char CCP1DEL @ 0xFB7;

extern volatile bit PRSEN @ ((unsigned)&ECCP1DEL*8)+7;
extern volatile bit PDC0 @ ((unsigned)&ECCP1DEL*8)+0;
extern volatile bit PDC1 @ ((unsigned)&ECCP1DEL*8)+1;
extern volatile bit PDC2 @ ((unsigned)&ECCP1DEL*8)+2;
extern volatile bit PDC3 @ ((unsigned)&ECCP1DEL*8)+3;
extern volatile bit PDC4 @ ((unsigned)&ECCP1DEL*8)+4;
extern volatile bit PDC5 @ ((unsigned)&ECCP1DEL*8)+5;
extern volatile bit PDC6 @ ((unsigned)&ECCP1DEL*8)+6;
extern union {
struct {
volatile unsigned PDC : 7;
volatile unsigned PRSEN : 1;
};
struct {
volatile unsigned PDC0 : 1;
volatile unsigned PDC1 : 1;
volatile unsigned PDC2 : 1;
volatile unsigned PDC3 : 1;
volatile unsigned PDC4 : 1;
volatile unsigned PDC5 : 1;
volatile unsigned PDC6 : 1;
};
} ECCP1DELbits @ 0xFB7;


extern volatile unsigned char BAUDCON @ 0xFB8;
extern volatile unsigned char BAUDCTL @ 0xFB8;

extern volatile bit ABDEN @ ((unsigned)&BAUDCON*8)+0;
extern volatile bit WUE @ ((unsigned)&BAUDCON*8)+1;
extern volatile bit BRG16 @ ((unsigned)&BAUDCON*8)+3;
extern volatile bit TXCKP @ ((unsigned)&BAUDCON*8)+4;
extern volatile bit RXDTP @ ((unsigned)&BAUDCON*8)+5;
extern volatile bit RCIDL @ ((unsigned)&BAUDCON*8)+6;
extern volatile bit ABDOVF @ ((unsigned)&BAUDCON*8)+7;
extern volatile bit SCKP @ ((unsigned)&BAUDCON*8)+4;
extern volatile bit RCMT @ ((unsigned)&BAUDCON*8)+6;
extern union {
struct {
volatile unsigned ABDEN : 1;
volatile unsigned WUE : 1;
volatile unsigned : 1;
volatile unsigned BRG16 : 1;
volatile unsigned TXCKP : 1;
volatile unsigned RXDTP : 1;
volatile unsigned RCIDL : 1;
volatile unsigned ABDOVF : 1;
};
struct {
volatile unsigned : 4;
volatile unsigned SCKP : 1;
volatile unsigned : 1;
volatile unsigned RCMT : 1;
};
} BAUDCONbits @ 0xFB8;


extern volatile unsigned char CCP2CON @ 0xFBA;

extern volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
extern volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
extern volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
extern volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
extern volatile bit DC2B0 @ ((unsigned)&CCP2CON*8)+4;
extern volatile bit DC2B1 @ ((unsigned)&CCP2CON*8)+5;
extern union {
struct {
volatile unsigned CCP2M : 4;
volatile unsigned DC2B : 2;
};
struct {
volatile unsigned CCP2M0 : 1;
volatile unsigned CCP2M1 : 1;
volatile unsigned CCP2M2 : 1;
volatile unsigned CCP2M3 : 1;
volatile unsigned DC2B0 : 1;
volatile unsigned DC2B1 : 1;
};
} CCP2CONbits @ 0xFBA;



extern volatile unsigned char CCPR2L @ 0xFBB;



extern volatile unsigned char CCPR2H @ 0xFBC;



extern volatile unsigned int CCPR2 @ 0xFBB;


extern volatile unsigned char CCP1CON @ 0xFBD;
extern volatile unsigned char ECCP1CON @ 0xFBD;

extern volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
extern volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
extern volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
extern volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
extern volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
extern volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
extern volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
extern volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;
extern union {
struct {
volatile unsigned CCP1M : 4;
volatile unsigned DC1B : 2;
volatile unsigned P1M : 2;
};
struct {
volatile unsigned CCP1M0 : 1;
volatile unsigned CCP1M1 : 1;
volatile unsigned CCP1M2 : 1;
volatile unsigned CCP1M3 : 1;
volatile unsigned DC1B0 : 1;
volatile unsigned DC1B1 : 1;
volatile unsigned P1M0 : 1;
volatile unsigned P1M1 : 1;
};
} CCP1CONbits @ 0xFBD;



extern volatile unsigned char CCPR1L @ 0xFBE;



extern volatile unsigned char CCPR1H @ 0xFBF;



extern volatile unsigned int CCPR1 @ 0xFBE;


extern volatile unsigned char ADCON2 @ 0xFC0;

extern volatile bit ADFM @ ((unsigned)&ADCON2*8)+7;
extern volatile bit ADCS0 @ ((unsigned)&ADCON2*8)+0;
extern volatile bit ADCS1 @ ((unsigned)&ADCON2*8)+1;
extern volatile bit ADCS2 @ ((unsigned)&ADCON2*8)+2;
extern volatile bit ACQT0 @ ((unsigned)&ADCON2*8)+3;
extern volatile bit ACQT1 @ ((unsigned)&ADCON2*8)+4;
extern volatile bit ACQT2 @ ((unsigned)&ADCON2*8)+5;
extern union {
struct {
volatile unsigned ADCS : 3;
volatile unsigned ACQT : 3;
volatile unsigned : 1;
volatile unsigned ADFM : 1;
};
struct {
volatile unsigned ADCS0 : 1;
volatile unsigned ADCS1 : 1;
volatile unsigned ADCS2 : 1;
volatile unsigned ACQT0 : 1;
volatile unsigned ACQT1 : 1;
volatile unsigned ACQT2 : 1;
};
} ADCON2bits @ 0xFC0;


extern volatile unsigned char ADCON1 @ 0xFC1;

extern volatile bit PCFG0 @ ((unsigned)&ADCON1*8)+0;
extern volatile bit PCFG1 @ ((unsigned)&ADCON1*8)+1;
extern volatile bit PCFG2 @ ((unsigned)&ADCON1*8)+2;
extern volatile bit PCFG3 @ ((unsigned)&ADCON1*8)+3;
extern volatile bit VCFG0 @ ((unsigned)&ADCON1*8)+4;
extern volatile bit VCFG1 @ ((unsigned)&ADCON1*8)+5;
extern union {
struct {
volatile unsigned PCFG : 4;
volatile unsigned VCFG : 2;
};
struct {
volatile unsigned PCFG0 : 1;
volatile unsigned PCFG1 : 1;
volatile unsigned PCFG2 : 1;
volatile unsigned PCFG3 : 1;
volatile unsigned VCFG0 : 1;
volatile unsigned VCFG1 : 1;
};
} ADCON1bits @ 0xFC1;


extern volatile unsigned char ADCON0 @ 0xFC2;

extern volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
extern volatile bit GO_nDONE @ ((unsigned)&ADCON0*8)+1;
extern volatile bit GO_DONE @ ((unsigned)&ADCON0*8)+1;
extern volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
extern volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
extern volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
extern volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
extern volatile bit DONE @ ((unsigned)&ADCON0*8)+1;
extern volatile bit GO @ ((unsigned)&ADCON0*8)+1;
extern volatile bit nDONE @ ((unsigned)&ADCON0*8)+1;
extern union {
struct {
volatile unsigned ADON : 1;
volatile unsigned GO_nDONE : 1;
volatile unsigned CHS : 4;
};
struct {
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 4;
};
struct {
volatile unsigned : 1;
volatile unsigned GO_DONE : 1;
volatile unsigned CHS0 : 1;
volatile unsigned CHS1 : 1;
volatile unsigned CHS2 : 1;
volatile unsigned CHS3 : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned DONE : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned GO : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned nDONE : 1;
};
} ADCON0bits @ 0xFC2;



extern volatile unsigned char ADRESL @ 0xFC3;



extern volatile unsigned char ADRESH @ 0xFC4;



extern volatile unsigned int ADRES @ 0xFC3;


extern volatile unsigned char SSPCON2 @ 0xFC5;

extern volatile bit SEN @ ((unsigned)&SSPCON2*8)+0;
extern volatile bit RSEN @ ((unsigned)&SSPCON2*8)+1;
extern volatile bit PEN @ ((unsigned)&SSPCON2*8)+2;
extern volatile bit RCEN @ ((unsigned)&SSPCON2*8)+3;
extern volatile bit ACKEN @ ((unsigned)&SSPCON2*8)+4;
extern volatile bit ACKDT @ ((unsigned)&SSPCON2*8)+5;
extern volatile bit ACKSTAT @ ((unsigned)&SSPCON2*8)+6;
extern volatile bit GCEN @ ((unsigned)&SSPCON2*8)+7;
extern union {
struct {
volatile unsigned SEN : 1;
volatile unsigned RSEN : 1;
volatile unsigned PEN : 1;
volatile unsigned RCEN : 1;
volatile unsigned ACKEN : 1;
volatile unsigned ACKDT : 1;
volatile unsigned ACKSTAT : 1;
volatile unsigned GCEN : 1;
};
} SSPCON2bits @ 0xFC5;


extern volatile unsigned char SSPCON1 @ 0xFC6;

extern volatile bit CKP @ ((unsigned)&SSPCON1*8)+4;
extern volatile bit SSPEN @ ((unsigned)&SSPCON1*8)+5;
extern volatile bit SSPOV @ ((unsigned)&SSPCON1*8)+6;
extern volatile bit WCOL @ ((unsigned)&SSPCON1*8)+7;
extern volatile bit SSPM0 @ ((unsigned)&SSPCON1*8)+0;
extern volatile bit SSPM1 @ ((unsigned)&SSPCON1*8)+1;
extern volatile bit SSPM2 @ ((unsigned)&SSPCON1*8)+2;
extern volatile bit SSPM3 @ ((unsigned)&SSPCON1*8)+3;
extern union {
struct {
volatile unsigned SSPM : 4;
volatile unsigned CKP : 1;
volatile unsigned SSPEN : 1;
volatile unsigned SSPOV : 1;
volatile unsigned WCOL : 1;
};
struct {
volatile unsigned SSPM0 : 1;
volatile unsigned SSPM1 : 1;
volatile unsigned SSPM2 : 1;
volatile unsigned SSPM3 : 1;
};
} SSPCON1bits @ 0xFC6;


extern volatile unsigned char SSPSTAT @ 0xFC7;

extern volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
extern volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
extern volatile bit R_nW @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit S @ ((unsigned)&SSPSTAT*8)+3;
extern volatile bit P @ ((unsigned)&SSPSTAT*8)+4;
extern volatile bit D_nA @ ((unsigned)&SSPSTAT*8)+5;
extern volatile bit CKE @ ((unsigned)&SSPSTAT*8)+6;
extern volatile bit SMP @ ((unsigned)&SSPSTAT*8)+7;
extern volatile bit R_W @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit D_A @ ((unsigned)&SSPSTAT*8)+5;
extern volatile bit I2C_READ @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit I2C_START @ ((unsigned)&SSPSTAT*8)+3;
extern volatile bit I2C_STOP @ ((unsigned)&SSPSTAT*8)+4;
extern volatile bit I2C_DAT @ ((unsigned)&SSPSTAT*8)+5;
extern volatile bit nW @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit nA @ ((unsigned)&SSPSTAT*8)+5;
extern volatile bit nWRITE @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit nADDRESS @ ((unsigned)&SSPSTAT*8)+5;
extern volatile bit READ_WRITE @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit DATA_ADDRESS @ ((unsigned)&SSPSTAT*8)+5;
extern volatile bit R @ ((unsigned)&SSPSTAT*8)+2;
extern volatile bit D @ ((unsigned)&SSPSTAT*8)+5;
extern union {
struct {
volatile unsigned BF : 1;
volatile unsigned UA : 1;
volatile unsigned R_nW : 1;
volatile unsigned S : 1;
volatile unsigned P : 1;
volatile unsigned D_nA : 1;
volatile unsigned CKE : 1;
volatile unsigned SMP : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned R_W : 1;
volatile unsigned : 2;
volatile unsigned D_A : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned I2C_READ : 1;
volatile unsigned I2C_START : 1;
volatile unsigned I2C_STOP : 1;
volatile unsigned I2C_DAT : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned nW : 1;
volatile unsigned : 2;
volatile unsigned nA : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned nWRITE : 1;
volatile unsigned : 2;
volatile unsigned nADDRESS : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned READ_WRITE : 1;
volatile unsigned : 2;
volatile unsigned DATA_ADDRESS : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned R : 1;
volatile unsigned : 2;
volatile unsigned D : 1;
};
} SSPSTATbits @ 0xFC7;


extern volatile unsigned char SSPADD @ 0xFC8;



extern volatile unsigned char SSPBUF @ 0xFC9;



extern volatile unsigned char T2CON @ 0xFCA;

extern volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
extern volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
extern volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
extern volatile bit T2OUTPS0 @ ((unsigned)&T2CON*8)+3;
extern volatile bit T2OUTPS1 @ ((unsigned)&T2CON*8)+4;
extern volatile bit T2OUTPS2 @ ((unsigned)&T2CON*8)+5;
extern volatile bit T2OUTPS3 @ ((unsigned)&T2CON*8)+6;
extern volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
extern volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
extern volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
extern volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
extern union {
struct {
volatile unsigned T2CKPS : 2;
volatile unsigned TMR2ON : 1;
volatile unsigned TOUTPS : 4;
};
struct {
volatile unsigned T2CKPS0 : 1;
volatile unsigned T2CKPS1 : 1;
volatile unsigned : 1;
volatile unsigned T2OUTPS0 : 1;
volatile unsigned T2OUTPS1 : 1;
volatile unsigned T2OUTPS2 : 1;
volatile unsigned T2OUTPS3 : 1;
};
struct {
volatile unsigned : 3;
volatile unsigned TOUTPS0 : 1;
volatile unsigned TOUTPS1 : 1;
volatile unsigned TOUTPS2 : 1;
volatile unsigned TOUTPS3 : 1;
};
} T2CONbits @ 0xFCA;


extern volatile unsigned char PR2 @ 0xFCB;



extern volatile unsigned char TMR2 @ 0xFCC;



extern volatile unsigned char T1CON @ 0xFCD;

extern volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
extern volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
extern volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
extern volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
extern volatile bit T1RUN @ ((unsigned)&T1CON*8)+6;

extern volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
extern volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
extern volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
extern union {
struct {
volatile unsigned TMR1ON : 1;
volatile unsigned TMR1CS : 1;
volatile unsigned nT1SYNC : 1;
volatile unsigned T1OSCEN : 1;
volatile unsigned T1CKPS : 2;
volatile unsigned T1RUN : 1;
volatile unsigned RD16 : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned T1SYNC : 1;
volatile unsigned : 1;
volatile unsigned T1CKPS0 : 1;
volatile unsigned T1CKPS1 : 1;
};
} T1CONbits @ 0xFCD;



extern volatile unsigned char TMR1L @ 0xFCE;



extern volatile unsigned char TMR1H @ 0xFCF;



extern volatile unsigned int TMR1 @ 0xFCE;


extern volatile unsigned char RCON @ 0xFD0;

extern volatile bit nBOR @ ((unsigned)&RCON*8)+0;
extern volatile bit nPOR @ ((unsigned)&RCON*8)+1;
extern volatile bit nPD @ ((unsigned)&RCON*8)+2;
extern volatile bit nTO @ ((unsigned)&RCON*8)+3;
extern volatile bit nRI @ ((unsigned)&RCON*8)+4;
extern volatile bit SBOREN @ ((unsigned)&RCON*8)+6;
extern volatile bit IPEN @ ((unsigned)&RCON*8)+7;
extern volatile bit BOR @ ((unsigned)&RCON*8)+0;
extern volatile bit POR @ ((unsigned)&RCON*8)+1;
extern volatile bit PD @ ((unsigned)&RCON*8)+2;
extern volatile bit TO @ ((unsigned)&RCON*8)+3;
extern volatile bit RI @ ((unsigned)&RCON*8)+4;
extern volatile bit nIPEN @ ((unsigned)&RCON*8)+7;
extern union {
struct {
volatile unsigned nBOR : 1;
volatile unsigned nPOR : 1;
volatile unsigned nPD : 1;
volatile unsigned nTO : 1;
volatile unsigned nRI : 1;
volatile unsigned : 1;
volatile unsigned SBOREN : 1;
volatile unsigned IPEN : 1;
};
struct {
volatile unsigned BOR : 1;
volatile unsigned POR : 1;
volatile unsigned PD : 1;
volatile unsigned TO : 1;
volatile unsigned RI : 1;
volatile unsigned : 2;
volatile unsigned nIPEN : 1;
};
} RCONbits @ 0xFD0;


extern volatile unsigned char WDTCON @ 0xFD1;

extern volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
extern volatile bit SWDTE @ ((unsigned)&WDTCON*8)+0;
extern union {
struct {
volatile unsigned SWDTEN : 1;
};
struct {
volatile unsigned SWDTE : 1;
};
} WDTCONbits @ 0xFD1;


extern volatile unsigned char HLVDCON @ 0xFD2;
extern volatile unsigned char LVDCON @ 0xFD2;

extern volatile bit HLVDEN @ ((unsigned)&HLVDCON*8)+4;
extern volatile bit IRVST @ ((unsigned)&HLVDCON*8)+5;
extern volatile bit VDIRMAG @ ((unsigned)&HLVDCON*8)+7;
extern volatile bit HLVDL0 @ ((unsigned)&HLVDCON*8)+0;
extern volatile bit HLVDL1 @ ((unsigned)&HLVDCON*8)+1;
extern volatile bit HLVDL2 @ ((unsigned)&HLVDCON*8)+2;
extern volatile bit HLVDL3 @ ((unsigned)&HLVDCON*8)+3;
extern volatile bit LVDL0 @ ((unsigned)&HLVDCON*8)+0;
extern volatile bit LVDL1 @ ((unsigned)&HLVDCON*8)+1;
extern volatile bit LVDL2 @ ((unsigned)&HLVDCON*8)+2;
extern volatile bit LVDL3 @ ((unsigned)&HLVDCON*8)+3;
extern volatile bit LVDEN @ ((unsigned)&HLVDCON*8)+4;
extern volatile bit IVRST @ ((unsigned)&HLVDCON*8)+5;
extern volatile bit LVV0 @ ((unsigned)&HLVDCON*8)+0;
extern volatile bit LVV1 @ ((unsigned)&HLVDCON*8)+1;
extern volatile bit LVV2 @ ((unsigned)&HLVDCON*8)+2;
extern volatile bit LVV3 @ ((unsigned)&HLVDCON*8)+3;
extern volatile bit BGST @ ((unsigned)&HLVDCON*8)+5;
extern union {
struct {
volatile unsigned HLVDL : 4;
volatile unsigned HLVDEN : 1;
volatile unsigned IRVST : 1;
volatile unsigned : 1;
volatile unsigned VDIRMAG : 1;
};
struct {
volatile unsigned HLVDL0 : 1;
volatile unsigned HLVDL1 : 1;
volatile unsigned HLVDL2 : 1;
volatile unsigned HLVDL3 : 1;
};
struct {
volatile unsigned LVDL0 : 1;
volatile unsigned LVDL1 : 1;
volatile unsigned LVDL2 : 1;
volatile unsigned LVDL3 : 1;
volatile unsigned LVDEN : 1;
volatile unsigned IVRST : 1;
};
struct {
volatile unsigned LVV0 : 1;
volatile unsigned LVV1 : 1;
volatile unsigned LVV2 : 1;
volatile unsigned LVV3 : 1;
volatile unsigned : 1;
volatile unsigned BGST : 1;
};
} HLVDCONbits @ 0xFD2;


extern volatile unsigned char OSCCON @ 0xFD3;

extern volatile bit IOFS @ ((unsigned)&OSCCON*8)+2;
extern volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
extern volatile bit IDLEN @ ((unsigned)&OSCCON*8)+7;
extern volatile bit SCS0 @ ((unsigned)&OSCCON*8)+0;
extern volatile bit SCS1 @ ((unsigned)&OSCCON*8)+1;
extern volatile bit FLTS @ ((unsigned)&OSCCON*8)+2;
extern volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
extern volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
extern volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
extern union {
struct {
volatile unsigned SCS : 2;
volatile unsigned IOFS : 1;
volatile unsigned OSTS : 1;
volatile unsigned IRCF : 3;
volatile unsigned IDLEN : 1;
};
struct {
volatile unsigned SCS0 : 1;
volatile unsigned SCS1 : 1;
volatile unsigned FLTS : 1;
volatile unsigned : 1;
volatile unsigned IRCF0 : 1;
volatile unsigned IRCF1 : 1;
volatile unsigned IRCF2 : 1;
};
} OSCCONbits @ 0xFD3;


extern volatile unsigned char T0CON @ 0xFD5;

extern volatile bit PSA @ ((unsigned)&T0CON*8)+3;
extern volatile bit T0SE @ ((unsigned)&T0CON*8)+4;
extern volatile bit T0CS @ ((unsigned)&T0CON*8)+5;
extern volatile bit T08BIT @ ((unsigned)&T0CON*8)+6;
extern volatile bit TMR0ON @ ((unsigned)&T0CON*8)+7;
extern volatile bit T0PS0 @ ((unsigned)&T0CON*8)+0;
extern volatile bit T0PS1 @ ((unsigned)&T0CON*8)+1;
extern volatile bit T0PS2 @ ((unsigned)&T0CON*8)+2;
extern union {
struct {
volatile unsigned T0PS : 3;
volatile unsigned PSA : 1;
volatile unsigned T0SE : 1;
volatile unsigned T0CS : 1;
volatile unsigned T08BIT : 1;
volatile unsigned TMR0ON : 1;
};
struct {
volatile unsigned T0PS0 : 1;
volatile unsigned T0PS1 : 1;
volatile unsigned T0PS2 : 1;
};
} T0CONbits @ 0xFD5;



extern volatile unsigned char TMR0L @ 0xFD6;



extern volatile unsigned char TMR0H @ 0xFD7;



extern volatile unsigned int TMR0 @ 0xFD6;


extern volatile unsigned char STATUS @ 0xFD8;

extern volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
extern volatile bit DC @ ((unsigned)&STATUS*8)+1;
extern volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
extern volatile bit OV @ ((unsigned)&STATUS*8)+3;
extern volatile bit N @ ((unsigned)&STATUS*8)+4;
extern union {
struct {
volatile unsigned C : 1;
volatile unsigned DC : 1;
volatile unsigned Z : 1;
volatile unsigned OV : 1;
volatile unsigned N : 1;
};
} STATUSbits @ 0xFD8;



extern volatile unsigned char FSR2L @ 0xFD9;



extern volatile unsigned char FSR2H @ 0xFDA;

extern union {
struct {
volatile unsigned : 4;
};
} FSR2Hbits @ 0xFDA;


extern volatile unsigned int FSR2 @ 0xFD9;


extern volatile unsigned char PLUSW2 @ 0xFDB;



extern volatile unsigned char PREINC2 @ 0xFDC;



extern volatile unsigned char POSTDEC2 @ 0xFDD;



extern volatile unsigned char POSTINC2 @ 0xFDE;



extern volatile unsigned char INDF2 @ 0xFDF;



extern volatile unsigned char BSR @ 0xFE0;

extern union {
struct {
volatile unsigned : 4;
};
} BSRbits @ 0xFE0;



extern volatile unsigned char FSR1L @ 0xFE1;



extern volatile unsigned char FSR1H @ 0xFE2;

extern union {
struct {
volatile unsigned : 4;
};
} FSR1Hbits @ 0xFE2;


extern volatile unsigned int FSR1 @ 0xFE1;


extern volatile unsigned char PLUSW1 @ 0xFE3;



extern volatile unsigned char PREINC1 @ 0xFE4;



extern volatile unsigned char POSTDEC1 @ 0xFE5;



extern volatile unsigned char POSTINC1 @ 0xFE6;



extern volatile unsigned char INDF1 @ 0xFE7;



extern volatile unsigned char WREG @ 0xFE8;




extern volatile unsigned char FSR0L @ 0xFE9;



extern volatile unsigned char FSR0H @ 0xFEA;

extern union {
struct {
volatile unsigned : 4;
};
} FSR0Hbits @ 0xFEA;


extern volatile unsigned int FSR0 @ 0xFE9;


extern volatile unsigned char PLUSW0 @ 0xFEB;



extern volatile unsigned char PREINC0 @ 0xFEC;



extern volatile unsigned char POSTDEC0 @ 0xFED;



extern volatile unsigned char POSTINC0 @ 0xFEE;



extern volatile unsigned char INDF0 @ 0xFEF;



extern volatile unsigned char INTCON3 @ 0xFF0;

extern volatile bit INT1IF @ ((unsigned)&INTCON3*8)+0;
extern volatile bit INT2IF @ ((unsigned)&INTCON3*8)+1;
extern volatile bit INT1IE @ ((unsigned)&INTCON3*8)+3;
extern volatile bit INT2IE @ ((unsigned)&INTCON3*8)+4;
extern volatile bit INT1IP @ ((unsigned)&INTCON3*8)+6;
extern volatile bit INT2IP @ ((unsigned)&INTCON3*8)+7;
extern volatile bit INT1F @ ((unsigned)&INTCON3*8)+0;
extern volatile bit INT2F @ ((unsigned)&INTCON3*8)+1;
extern volatile bit INT1E @ ((unsigned)&INTCON3*8)+3;
extern volatile bit INT2E @ ((unsigned)&INTCON3*8)+4;
extern volatile bit INT1P @ ((unsigned)&INTCON3*8)+6;
extern volatile bit INT2P @ ((unsigned)&INTCON3*8)+7;
extern union {
struct {
volatile unsigned INT1IF : 1;
volatile unsigned INT2IF : 1;
volatile unsigned : 1;
volatile unsigned INT1IE : 1;
volatile unsigned INT2IE : 1;
volatile unsigned : 1;
volatile unsigned INT1IP : 1;
volatile unsigned INT2IP : 1;
};
struct {
volatile unsigned INT1F : 1;
volatile unsigned INT2F : 1;
volatile unsigned : 1;
volatile unsigned INT1E : 1;
volatile unsigned INT2E : 1;
volatile unsigned : 1;
volatile unsigned INT1P : 1;
volatile unsigned INT2P : 1;
};
} INTCON3bits @ 0xFF0;


extern volatile unsigned char INTCON2 @ 0xFF1;

extern volatile bit RBIP @ ((unsigned)&INTCON2*8)+0;
extern volatile bit TMR0IP @ ((unsigned)&INTCON2*8)+2;
extern volatile bit INTEDG2 @ ((unsigned)&INTCON2*8)+4;
extern volatile bit INTEDG1 @ ((unsigned)&INTCON2*8)+5;
extern volatile bit INTEDG0 @ ((unsigned)&INTCON2*8)+6;
extern volatile bit nRBPU @ ((unsigned)&INTCON2*8)+7;
extern volatile bit T0IP @ ((unsigned)&INTCON2*8)+2;
extern volatile bit RBPU @ ((unsigned)&INTCON2*8)+7;
extern union {
struct {
volatile unsigned RBIP : 1;
volatile unsigned : 1;
volatile unsigned TMR0IP : 1;
volatile unsigned : 1;
volatile unsigned INTEDG2 : 1;
volatile unsigned INTEDG1 : 1;
volatile unsigned INTEDG0 : 1;
volatile unsigned nRBPU : 1;
};
struct {
volatile unsigned : 2;
volatile unsigned T0IP : 1;
volatile unsigned : 4;
volatile unsigned RBPU : 1;
};
} INTCON2bits @ 0xFF1;


extern volatile unsigned char INTCON @ 0xFF2;

extern volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
extern volatile bit INT0IF @ ((unsigned)&INTCON*8)+1;
extern volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
extern volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
extern volatile bit INT0IE @ ((unsigned)&INTCON*8)+4;
extern volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;
extern volatile bit PEIE_GIEL @ ((unsigned)&INTCON*8)+6;
extern volatile bit GIE_GIEH @ ((unsigned)&INTCON*8)+7;
extern volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
extern volatile bit GIE @ ((unsigned)&INTCON*8)+7;
extern volatile bit GIEL @ ((unsigned)&INTCON*8)+6;
extern volatile bit GIEH @ ((unsigned)&INTCON*8)+7;
extern volatile bit INT0F @ ((unsigned)&INTCON*8)+1;
extern volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
extern volatile bit INT0E @ ((unsigned)&INTCON*8)+4;
extern volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
extern union {
struct {
volatile unsigned RBIF : 1;
volatile unsigned INT0IF : 1;
volatile unsigned TMR0IF : 1;
volatile unsigned RBIE : 1;
volatile unsigned INT0IE : 1;
volatile unsigned TMR0IE : 1;
volatile unsigned PEIE_GIEL : 1;
volatile unsigned GIE_GIEH : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned PEIE : 1;
volatile unsigned GIE : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned GIEL : 1;
volatile unsigned GIEH : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
volatile unsigned : 1;
};
struct {
volatile unsigned : 1;
volatile unsigned INT0F : 1;
volatile unsigned T0IF : 1;
volatile unsigned : 1;
volatile unsigned INT0E : 1;
volatile unsigned T0IE : 1;
volatile unsigned : 1;
volatile unsigned : 1;
};
struct {
volatile unsigned : 6;
volatile unsigned : 1;
volatile unsigned : 1;
};
} INTCONbits @ 0xFF2;



extern volatile unsigned char PRODL @ 0xFF3;



extern volatile unsigned char PRODH @ 0xFF4;



extern volatile unsigned int PROD @ 0xFF3;


extern volatile unsigned char TABLAT @ 0xFF5;




extern volatile unsigned char TBLPTRL @ 0xFF6;



extern volatile unsigned char TBLPTRH @ 0xFF7;



extern volatile unsigned char TBLPTRU @ 0xFF8;

extern union {
struct {
volatile unsigned : 5;
};
} TBLPTRUbits @ 0xFF8;


extern volatile far unsigned char * TBLPTR @ 0xFF6;



extern volatile unsigned char PCL @ 0xFF9;



extern volatile unsigned char PCLATH @ 0xFFA;



extern volatile unsigned char PCLATU @ 0xFFB;

extern union {
struct {
volatile unsigned : 5;
};
} PCLATUbits @ 0xFFB;


extern volatile unsigned short long int PCLAT @ 0xFF9;


extern volatile unsigned char STKPTR @ 0xFFC;

extern volatile bit STKUNF @ ((unsigned)&STKPTR*8)+6;
extern volatile bit STKFUL @ ((unsigned)&STKPTR*8)+7;
extern volatile bit STKPTR0 @ ((unsigned)&STKPTR*8)+0;
extern volatile bit STKPTR1 @ ((unsigned)&STKPTR*8)+1;
extern volatile bit STKPTR2 @ ((unsigned)&STKPTR*8)+2;
extern volatile bit STKPTR3 @ ((unsigned)&STKPTR*8)+3;
extern volatile bit STKPTR4 @ ((unsigned)&STKPTR*8)+4;
extern volatile bit STKOVF @ ((unsigned)&STKPTR*8)+7;
extern union {
struct {
volatile unsigned STKPTR : 5;
volatile unsigned : 1;
volatile unsigned STKUNF : 1;
volatile unsigned STKFUL : 1;
};
struct {
volatile unsigned STKPTR0 : 1;
volatile unsigned STKPTR1 : 1;
volatile unsigned STKPTR2 : 1;
volatile unsigned STKPTR3 : 1;
volatile unsigned STKPTR4 : 1;
};
struct {
volatile unsigned : 7;
volatile unsigned STKOVF : 1;
};
} STKPTRbits @ 0xFFC;



extern volatile unsigned char TOSL @ 0xFFD;



extern volatile unsigned char TOSH @ 0xFFE;



extern volatile unsigned char TOSU @ 0xFFF;

extern union {
struct {
volatile unsigned : 5;
};
} TOSUbits @ 0xFFF;


extern volatile unsigned short long int TOS @ 0xFFD;


extern volatile unsigned int TMR0_Internal @ 0x1000;

extern union {
struct {
volatile unsigned InternalTMR : 16;
};
} TMR0_Internalbits @ 0x1000;


extern volatile unsigned char TMR0_Prescale @ 0x1002;



extern volatile unsigned int TMR1_Internal @ 0x1003;

extern union {
struct {
volatile unsigned InternalTMR : 16;
};
} TMR1_Internalbits @ 0x1003;


extern volatile unsigned char TMR1_Prescale @ 0x1005;



extern volatile unsigned char TMR2_Prescale @ 0x1006;



extern volatile unsigned int TMR3_Internal @ 0x1007;

extern union {
struct {
volatile unsigned InternalTMR : 16;
};
} TMR3_Internalbits @ 0x1007;


extern volatile unsigned char TMR3_Prescale @ 0x1009;

# 3 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\usbregs18.h"
typedef struct {
unsigned volatile EPSTALL:1;
unsigned EPINEN:1;
unsigned EPOUTEN:1;
unsigned EPCONDIS:1;
unsigned EPHSHK:1;
} _USB_ENDPOINT_BITS;


typedef struct {
union {
struct {
volatile unsigned BC89:2;
unsigned BSTALL:1;
unsigned DTSEN:1;
unsigned :2;
unsigned DTS:1;
unsigned UOWN:1;
} CPU;
struct {
volatile unsigned BC89:2;
volatile unsigned PID:4;
unsigned :1;
unsigned UOWN:1;
} SIE;
} BDSTAT;
volatile unsigned char BDCNT;
volatile unsigned int BDADR;
} _BUFFER_DESCRIPTOR_STRUCT;


volatile _USB_ENDPOINT_BITS _USB_ENDPOINT[15] @ ((unsigned)&UEP0);


volatile _BUFFER_DESCRIPTOR_STRUCT _USB_DESCRIPTOR[64] @ 0x400;

# 9 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\legacy/ppic18f4550.h"
extern volatile near bit NEGATIVE @ ((unsigned)&STATUS*8)+4;

extern near bit T1RD16 @ ((unsigned)&T1CON*8)+7;

extern volatile near bit RW @ ((unsigned)&SSPSTAT*8)+2;
extern volatile near bit START @ ((unsigned)&SSPSTAT*8)+3;
extern volatile near bit STOP @ ((unsigned)&SSPSTAT*8)+4;
extern volatile near bit DA @ ((unsigned)&SSPSTAT*8)+5;

extern volatile near bit GODONE @ ((unsigned)&ADCON0*8)+1;

extern near bit T3RD16 @ ((unsigned)&T3CON*8)+7;



extern volatile near bit RE0 @ ((unsigned)&PORTE*8)+0;
extern volatile near bit RE1 @ ((unsigned)&PORTE*8)+1;
extern volatile near bit RE2 @ ((unsigned)&PORTE*8)+2;


extern volatile near bit RD0 @ ((unsigned)&PORTD*8)+0;
extern volatile near bit RD1 @ ((unsigned)&PORTD*8)+1;
extern volatile near bit RD2 @ ((unsigned)&PORTD*8)+2;
extern volatile near bit RD3 @ ((unsigned)&PORTD*8)+3;
extern volatile near bit RD4 @ ((unsigned)&PORTD*8)+4;
extern volatile near bit RD5 @ ((unsigned)&PORTD*8)+5;
extern volatile near bit RD6 @ ((unsigned)&PORTD*8)+6;
extern volatile near bit RD7 @ ((unsigned)&PORTD*8)+7;



extern volatile near bit RC0 @ ((unsigned)&PORTC*8)+0;
extern volatile near bit RC1 @ ((unsigned)&PORTC*8)+1;
extern volatile near bit RC2 @ ((unsigned)&PORTC*8)+2;
extern volatile near bit RC6 @ ((unsigned)&PORTC*8)+6;
extern volatile near bit RC7 @ ((unsigned)&PORTC*8)+7;


extern volatile near bit RB0 @ ((unsigned)&PORTB*8)+0;
extern volatile near bit RB1 @ ((unsigned)&PORTB*8)+1;
extern volatile near bit RB2 @ ((unsigned)&PORTB*8)+2;
extern volatile near bit RB3 @ ((unsigned)&PORTB*8)+3;
extern volatile near bit RB4 @ ((unsigned)&PORTB*8)+4;
extern volatile near bit RB5 @ ((unsigned)&PORTB*8)+5;
extern volatile near bit RB6 @ ((unsigned)&PORTB*8)+6;
extern volatile near bit RB7 @ ((unsigned)&PORTB*8)+7;


extern volatile near bit RA0 @ ((unsigned)&PORTA*8)+0;
extern volatile near bit RA1 @ ((unsigned)&PORTA*8)+1;
extern volatile near bit RA2 @ ((unsigned)&PORTA*8)+2;
extern volatile near bit RA3 @ ((unsigned)&PORTA*8)+3;
extern volatile near bit RA4 @ ((unsigned)&PORTA*8)+4;
extern volatile near bit RA5 @ ((unsigned)&PORTA*8)+5;
extern volatile near bit RA6 @ ((unsigned)&PORTA*8)+6;


extern volatile near bit EPSTALL15 @ ((unsigned)&UEP15*8)+0;
extern near bit EPINEN15 @ ((unsigned)&UEP15*8)+1;
extern near bit EPOUTEN15 @ ((unsigned)&UEP15*8)+2;
extern near bit EPCONDIS15 @ ((unsigned)&UEP15*8)+3;
extern near bit EPHSHK15 @ ((unsigned)&UEP15*8)+4;


extern volatile near bit EPSTALL14 @ ((unsigned)&UEP14*8)+0;
extern near bit EPINEN14 @ ((unsigned)&UEP14*8)+1;
extern near bit EPOUTEN14 @ ((unsigned)&UEP14*8)+2;
extern near bit EPCONDIS14 @ ((unsigned)&UEP14*8)+3;
extern near bit EPHSHK14 @ ((unsigned)&UEP14*8)+4;


extern volatile near bit EPSTALL13 @ ((unsigned)&UEP13*8)+0;
extern near bit EPINEN13 @ ((unsigned)&UEP13*8)+1;
extern near bit EPOUTEN13 @ ((unsigned)&UEP13*8)+2;
extern near bit EPCONDIS13 @ ((unsigned)&UEP13*8)+3;
extern near bit EPHSHK13 @ ((unsigned)&UEP13*8)+4;


extern volatile near bit EPSTALL12 @ ((unsigned)&UEP12*8)+0;
extern near bit EPINEN12 @ ((unsigned)&UEP12*8)+1;
extern near bit EPOUTEN12 @ ((unsigned)&UEP12*8)+2;
extern near bit EPCONDIS12 @ ((unsigned)&UEP12*8)+3;
extern near bit EPHSHK12 @ ((unsigned)&UEP12*8)+4;


extern volatile near bit EPSTALL11 @ ((unsigned)&UEP11*8)+0;
extern near bit EPINEN11 @ ((unsigned)&UEP11*8)+1;
extern near bit EPOUTEN11 @ ((unsigned)&UEP11*8)+2;
extern near bit EPCONDIS11 @ ((unsigned)&UEP11*8)+3;
extern near bit EPHSHK11 @ ((unsigned)&UEP11*8)+4;


extern volatile near bit EPSTALL10 @ ((unsigned)&UEP10*8)+0;
extern near bit EPINEN10 @ ((unsigned)&UEP10*8)+1;
extern near bit EPOUTEN10 @ ((unsigned)&UEP10*8)+2;
extern near bit EPCONDIS10 @ ((unsigned)&UEP10*8)+3;
extern near bit EPHSHK10 @ ((unsigned)&UEP10*8)+4;


extern volatile near bit EPSTALL9 @ ((unsigned)&UEP9*8)+0;
extern near bit EPINEN9 @ ((unsigned)&UEP9*8)+1;
extern near bit EPOUTEN9 @ ((unsigned)&UEP9*8)+2;
extern near bit EPCONDIS9 @ ((unsigned)&UEP9*8)+3;
extern near bit EPHSHK9 @ ((unsigned)&UEP9*8)+4;


extern volatile near bit EPSTALL8 @ ((unsigned)&UEP8*8)+0;
extern near bit EPINEN8 @ ((unsigned)&UEP8*8)+1;
extern near bit EPOUTEN8 @ ((unsigned)&UEP8*8)+2;
extern near bit EPCONDIS8 @ ((unsigned)&UEP8*8)+3;
extern near bit EPHSHK8 @ ((unsigned)&UEP8*8)+4;


extern volatile near bit EPSTALL7 @ ((unsigned)&UEP7*8)+0;
extern near bit EPINEN7 @ ((unsigned)&UEP7*8)+1;
extern near bit EPOUTEN7 @ ((unsigned)&UEP7*8)+2;
extern near bit EPCONDIS7 @ ((unsigned)&UEP7*8)+3;
extern near bit EPHSHK7 @ ((unsigned)&UEP7*8)+4;


extern volatile near bit EPSTALL6 @ ((unsigned)&UEP6*8)+0;
extern near bit EPINEN6 @ ((unsigned)&UEP6*8)+1;
extern near bit EPOUTEN6 @ ((unsigned)&UEP6*8)+2;
extern near bit EPCONDIS6 @ ((unsigned)&UEP6*8)+3;
extern near bit EPHSHK6 @ ((unsigned)&UEP6*8)+4;


extern volatile near bit EPSTALL5 @ ((unsigned)&UEP5*8)+0;
extern near bit EPINEN5 @ ((unsigned)&UEP5*8)+1;
extern near bit EPOUTEN5 @ ((unsigned)&UEP5*8)+2;
extern near bit EPCONDIS5 @ ((unsigned)&UEP5*8)+3;
extern near bit EPHSHK5 @ ((unsigned)&UEP5*8)+4;


extern volatile near bit EPSTALL4 @ ((unsigned)&UEP4*8)+0;
extern near bit EPINEN4 @ ((unsigned)&UEP4*8)+1;
extern near bit EPOUTEN4 @ ((unsigned)&UEP4*8)+2;
extern near bit EPCONDIS4 @ ((unsigned)&UEP4*8)+3;
extern near bit EPHSHK4 @ ((unsigned)&UEP4*8)+4;


extern volatile near bit EPSTALL3 @ ((unsigned)&UEP3*8)+0;
extern near bit EPINEN3 @ ((unsigned)&UEP3*8)+1;
extern near bit EPOUTEN3 @ ((unsigned)&UEP3*8)+2;
extern near bit EPCONDIS3 @ ((unsigned)&UEP3*8)+3;
extern near bit EPHSHK3 @ ((unsigned)&UEP3*8)+4;


extern volatile near bit EPSTALL2 @ ((unsigned)&UEP2*8)+0;
extern near bit EPINEN2 @ ((unsigned)&UEP2*8)+1;
extern near bit EPOUTEN2 @ ((unsigned)&UEP2*8)+2;
extern near bit EPCONDIS2 @ ((unsigned)&UEP2*8)+3;
extern near bit EPHSHK2 @ ((unsigned)&UEP2*8)+4;


extern volatile near bit EPSTALL1 @ ((unsigned)&UEP1*8)+0;
extern near bit EPINEN1 @ ((unsigned)&UEP1*8)+1;
extern near bit EPOUTEN1 @ ((unsigned)&UEP1*8)+2;
extern near bit EPCONDIS1 @ ((unsigned)&UEP1*8)+3;
extern near bit EPHSHK1 @ ((unsigned)&UEP1*8)+4;


extern volatile near bit EPSTALL0 @ ((unsigned)&UEP0*8)+0;
extern near bit EPINEN0 @ ((unsigned)&UEP0*8)+1;
extern near bit EPOUTEN0 @ ((unsigned)&UEP0*8)+2;
extern near bit EPCONDIS0 @ ((unsigned)&UEP0*8)+3;
extern near bit EPHSHK0 @ ((unsigned)&UEP0*8)+4;


extern near bit UPP0 @ ((unsigned)&UCFG*8)+0;
extern near bit UPP1 @ ((unsigned)&UCFG*8)+1;




extern near bit ADDR0 @ ((unsigned)&SPPEPS*8)+0;
extern near bit ADDR1 @ ((unsigned)&SPPEPS*8)+1;
extern near bit ADDR2 @ ((unsigned)&SPPEPS*8)+2;
extern near bit ADDR3 @ ((unsigned)&SPPEPS*8)+3;
extern volatile near bit BUSY @ ((unsigned)&SPPEPS*8)+4;

# 1376 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18.h"
extern unsigned char idloc_read(unsigned char reg_no);
extern void idloc_write(unsigned char reg_no,unsigned char data);

# 1498
extern unsigned char eeprom_read(unsigned int address);
extern void eeprom_write(unsigned int address,unsigned char data);



extern unsigned char flash_read(unsigned long addr);



extern void flash_write(const unsigned char *,unsigned int,far unsigned char *);


extern void flash_erase(unsigned long addr);

# 1528
extern unsigned int config_read(unsigned char reg_no);
extern void config_write(unsigned char reg_no, unsigned int dataword);


extern unsigned int device_id_read(void);


extern void initiate_write(void);

# 1554
extern unsigned char checksum8(unsigned long startAddr, unsigned long length);
extern unsigned int checksum16(unsigned long startAddr, unsigned long length);
extern unsigned long checksum32(unsigned long startAddr, unsigned long length);


# 1568
#pragma inline(_delay)
extern void _delay(unsigned long);
#pragma inline(_delay3)
extern void _delay3(unsigned char);

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\peripheral/psupport.h"
extern volatile bit SEN_x @ ((unsigned)&SSPCON2*8)+0;
extern volatile bit RSEN_x @ ((unsigned)&SSPCON2*8)+1;
extern volatile bit PEN_x @ ((unsigned)&SSPCON2*8)+2;
extern volatile bit RCEN_x @ ((unsigned)&SSPCON2*8)+3;
extern volatile bit ACKEN_x @ ((unsigned)&SSPCON2*8)+4;
extern volatile bit ACKDT_x @ ((unsigned)&SSPCON2*8)+5;
extern volatile bit ACKSTAT_x @ ((unsigned)&SSPCON2*8)+6;
extern volatile bit GCEN_x @ ((unsigned)&SSPCON2*8)+7;

extern volatile bit CKP_x @ ((unsigned)&SSPCON1*8)+4;
extern volatile bit SSPEN_x @ ((unsigned)&SSPCON1*8)+5;
extern volatile bit SSPOV_x @ ((unsigned)&SSPCON1*8)+6;
extern volatile bit WCOL_x @ ((unsigned)&SSPCON1*8)+7;
extern volatile bit SSPM0_x @ ((unsigned)&SSPCON1*8)+0;
extern volatile bit SSPM1_x @ ((unsigned)&SSPCON1*8)+1;
extern volatile bit SSPM2_x @ ((unsigned)&SSPCON1*8)+2;
extern volatile bit SSPM3_x @ ((unsigned)&SSPCON1*8)+3;

# 88
extern volatile bit TX9D_x @ ((unsigned)&TXSTA*8)+0;
extern volatile bit TRMT_x @ ((unsigned)&TXSTA*8)+1;
extern volatile bit BRGH_x @ ((unsigned)&TXSTA*8)+2;
extern volatile bit SENDB_x @ ((unsigned)&TXSTA*8)+3;
extern volatile bit SYNC_x @ ((unsigned)&TXSTA*8)+4;
extern volatile bit TXEN_x @ ((unsigned)&TXSTA*8)+5;
extern volatile bit TX9_x @ ((unsigned)&TXSTA*8)+6;
extern volatile bit CSRC_x @ ((unsigned)&TXSTA*8)+7;


extern volatile bit RX9D_x @ ((unsigned)&RCSTA*8)+0;
extern volatile bit OERR_x @ ((unsigned)&RCSTA*8)+1;
extern volatile bit FERR_x @ ((unsigned)&RCSTA*8)+2;
extern volatile bit ADDEN_x @ ((unsigned)&RCSTA*8)+3;
extern volatile bit CREN_x @ ((unsigned)&RCSTA*8)+4;
extern volatile bit SREN_x @ ((unsigned)&RCSTA*8)+5;
extern volatile bit RX9_x @ ((unsigned)&RCSTA*8)+6;
extern volatile bit SPEN_x @ ((unsigned)&RCSTA*8)+7;

extern volatile bit TXIE_x @ ((unsigned)&PIE1*8)+4;
extern volatile bit RCIE_x @ ((unsigned)&PIE1*8)+5;

# 166
extern volatile bit BF_x @ ((unsigned)&SSPSTAT*8)+0;

# 171
extern volatile bit R_W_x @ ((unsigned)&SSPSTAT*8)+2;



extern volatile bit CKE_x @ ((unsigned)&SSPSTAT*8)+6;

# 36 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 28 "C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\string.h"
extern void * memcpy(void *, const void *, size_t);
extern void * memmove(void *, const void *, size_t);
extern void * memset(void *, int, size_t);

# 41
extern char * strcat(char *, const char *);
extern char * strcpy(char *, const char *);
extern char * strncat(char *, const char *, size_t);
extern char * strncpy(char *, const char *, size_t);
extern char * strdup(const char *);
extern char * strtok(char *, const char *);


extern int memcmp(const void *, const void *, size_t);
extern int strcmp(const char *, const char *);
extern int stricmp(const char *, const char *);
extern int strncmp(const char *, const char *, size_t);
extern int strnicmp(const char *, const char *, size_t);
extern  void * memchr(const void *, int, size_t);
extern size_t strcspn(const char *, const char *);
extern  char * strpbrk(const char *, const char *);
extern size_t strspn(const char *, const char *);
extern  char * strstr(const char *, const char *);
extern  char * stristr(const char *, const char *);
extern char * strerror(int);
extern size_t strlen(const char *);
extern  char * strchr(const char *, int);
extern  char * strichr(const char *, int);
extern  char * strrchr(const char *, int);
extern  char * strrichr(const char *, int);

# 168 "../usb_common.h"
typedef union
{
BYTE bitmap;
struct
{
BYTE ep_num: 4;
BYTE zero_pkt: 1;
BYTE dts: 1;
BYTE force_dts: 1;
BYTE direction: 1;
}field;

} TRANSFER_FLAGS;

# 242
typedef enum
{

EVENT_NONE = 0,

EVENT_DEVICE_STACK_BASE = 1,

EVENT_HOST_STACK_BASE = 100,


EVENT_HUB_ATTACH,


EVENT_STALL,


EVENT_VBUS_SES_REQUEST,




EVENT_VBUS_OVERCURRENT,

# 269
EVENT_VBUS_REQUEST_POWER,




EVENT_VBUS_RELEASE_POWER,

# 283
EVENT_VBUS_POWER_AVAILABLE,



EVENT_UNSUPPORTED_DEVICE,



EVENT_CANNOT_ENUMERATE,



EVENT_CLIENT_INIT_ERROR,

# 301
EVENT_OUT_OF_MEMORY,


EVENT_UNSPECIFIED_ERROR,



EVENT_DETACH,




EVENT_TRANSFER,



EVENT_SOF,


EVENT_RESUME,



EVENT_SUSPEND,



EVENT_RESET,


EVENT_GENERIC_BASE = 400,

EVENT_MSD_BASE = 500,

EVENT_HID_BASE = 600,

EVENT_PRINTER_BASE = 700,

EVENT_CDC_BASE = 800,

EVENT_CHARGER_BASE = 900,

EVENT_AUDIO_BASE = 1000,

EVENT_USER_BASE = 10000,

# 351
EVENT_BUS_ERROR = 32767

# 356
} USB_EVENT;

# 368
typedef struct _transfer_event_data
{
TRANSFER_FLAGS flags;
UINT32 size;
BYTE pid;

} USB_TRANSFER_EVENT_DATA;

# 385
typedef struct _vbus_power_data
{
BYTE port;
BYTE current;
} USB_VBUS_POWER_EVENT_DATA;

# 444
typedef BOOL (*USB_EVENT_HANDLER) ( USB_EVENT event, void *data, unsigned int size );

# 114 "../usb_ch9.h"
typedef struct  _USB_DEVICE_DESCRIPTOR
{
BYTE bLength;
BYTE bDescriptorType;
WORD bcdUSB;
BYTE bDeviceClass;
BYTE bDeviceSubClass;
BYTE bDeviceProtocol;
BYTE bMaxPacketSize0;
WORD idVendor;
WORD idProduct;
WORD bcdDevice;
BYTE iManufacturer;
BYTE iProduct;
BYTE iSerialNumber;
BYTE bNumConfigurations;
} USB_DEVICE_DESCRIPTOR;

# 140
typedef struct  _USB_CONFIGURATION_DESCRIPTOR
{
BYTE bLength;
BYTE bDescriptorType;
WORD wTotalLength;
BYTE bNumInterfaces;
BYTE bConfigurationValue;
BYTE iConfiguration;
BYTE bmAttributes;
BYTE bMaxPower;
} USB_CONFIGURATION_DESCRIPTOR;

# 165
typedef struct  _USB_INTERFACE_DESCRIPTOR
{
BYTE bLength;
BYTE bDescriptorType;
BYTE bInterfaceNumber;
BYTE bAlternateSetting;
BYTE bNumEndpoints;
BYTE bInterfaceClass;
BYTE bInterfaceSubClass;
BYTE bInterfaceProtocol;
BYTE iInterface;
} USB_INTERFACE_DESCRIPTOR;

# 186
typedef struct  _USB_ENDPOINT_DESCRIPTOR
{
BYTE bLength;
BYTE bDescriptorType;
BYTE bEndpointAddress;
BYTE bmAttributes;
WORD wMaxPacketSize;
BYTE bInterval;
} USB_ENDPOINT_DESCRIPTOR;

# 236
typedef struct
{
BYTE index;
BYTE type;
UINT16 language_id;

} DESCRIPTOR_ID;

# 251
typedef struct  _USB_OTG_DESCRIPTOR
{
BYTE bLength;
BYTE bDescriptorType;
BYTE bmAttributes;
} USB_OTG_DESCRIPTOR;

# 275
typedef struct  _USB_STRING_DSC
{
BYTE bLength;
BYTE bDescriptorType;

} USB_STRING_DESCRIPTOR;

# 294
typedef struct  _USB_DEVICE_QUALIFIER_DESCRIPTO
{
BYTE bLength;
BYTE bType;
WORD bcdUSB;
BYTE bDeviceClass;
BYTE bDeviceSubClass;
BYTE bDeviceProtocol;
BYTE bMaxPacketSize0;
BYTE bNumConfigurations;
BYTE bReserved;

} USB_DEVICE_QUALIFIER_DESCRIPTOR;

# 317
typedef union 
{

struct 
{
BYTE bmRequestType;
BYTE bRequest;
WORD wValue;
WORD wIndex;
WORD wLength;
};
struct 
{
unsigned :8;
unsigned :8;
WORD_VAL W_Value;
WORD_VAL W_Index;
WORD_VAL W_Length;
};
struct 
{
unsigned Recipient:5;
unsigned RequestType:2;
unsigned DataDir:1;
unsigned :8;
BYTE bFeature;
unsigned :8;
unsigned :8;
unsigned :8;
unsigned :8;
unsigned :8;
};
struct 
{
union
{
BYTE bmRequestType;
struct
{
BYTE recipient: 5;
BYTE type: 2;
BYTE direction: 1;
};
}requestInfo;
};
struct 
{
unsigned :8;
unsigned :8;
BYTE bDscIndex;
BYTE bDescriptorType;
WORD wLangID;
unsigned :8;
unsigned :8;
};
struct 
{
unsigned :8;
unsigned :8;
BYTE_VAL bDevADR;
BYTE bDevADRH;
unsigned :8;
unsigned :8;
unsigned :8;
unsigned :8;
};
struct 
{
unsigned :8;
unsigned :8;
BYTE bConfigurationValue;
BYTE bCfgRSD;
unsigned :8;
unsigned :8;
unsigned :8;
unsigned :8;
};
struct 
{
unsigned :8;
unsigned :8;
BYTE bAltID;
BYTE bAltID_H;
BYTE bIntfID;
BYTE bIntfID_H;
unsigned :8;
unsigned :8;
};
struct 
{
unsigned :8;
unsigned :8;
unsigned :8;
unsigned :8;
BYTE bEPID;
BYTE bEPID_H;
unsigned :8;
unsigned :8;
};
struct 
{
unsigned :8;
unsigned :8;
unsigned :8;
unsigned :8;
unsigned EPNum:4;
unsigned :3;
unsigned EPDir:1;
unsigned :8;
unsigned :8;
unsigned :8;
};



} CTRL_TRF_SETUP, SETUP_PKT, *PSETUP_PKT;

# 118 "../usb_device.h"
typedef enum
{

# 123
DETACHED_STATE
= 0x00 ,

# 127
ATTACHED_STATE
= 0x01 ,

# 131
POWERED_STATE
= 0x02 ,

# 135
DEFAULT_STATE
= 0x04 ,

# 142
ADR_PENDING_STATE
= 0x08 ,

# 146
ADDRESS_STATE
= 0x10 ,

# 153
CONFIGURED_STATE
= 0x20
} USB_DEVICE_STATE;



typedef enum
{

EVENT_CONFIGURED
= EVENT_DEVICE_STACK_BASE ,


EVENT_SET_DESCRIPTOR,

# 172
EVENT_EP0_REQUEST,

# 201
EVENT_ATTACH

} USB_DEVICE_STACK_EVENTS;

# 263
void USBDeviceTasks(void);

# 288
void USBDeviceInit(void);

# 353
BOOL USBGetRemoteWakeupStatus(void);

# 410
USB_DEVICE_STATE USBGetDeviceState(void);

# 460
BOOL USBGetSuspendState(void);

# 511
void USBEnableEndpoint(BYTE ep, BYTE options);

# 543
BOOL USBIsDeviceSuspended(void);

# 569
void USBSoftDetach(void);

# 613
void* USBTransferOnePacket(BYTE ep,BYTE dir,BYTE* data,BYTE len);

# 647
BOOL USBHandleBusy(void* handle);

# 681
WORD USBHandleGetLength(void* handle);

# 713
WORD USBHandleGetAddr(void*);

# 746
void USBEP0Transmit(BYTE options);

# 774
void USBEP0SendRAMPtr(BYTE* src, WORD size, BYTE Options);

# 806
void USBEP0SendROMPtr(BYTE* src, WORD size, BYTE Options);

# 834
void USBEP0Receive(BYTE* dest, WORD size, void (*function));

# 862
void* USBTxOnePacket(BYTE ep, BYTE* data, WORD len);

# 889
void* USBRxOnePacket(BYTE ep, BYTE* data, WORD len);

# 915
void USBStallEndpoint(BYTE ep, BYTE dir);

# 943
void USBDeviceDetach(void);

# 975
void USBDeviceAttach(void);

# 1004
BOOL USB_APPLICATION_EVENT_HANDLER(BYTE address, USB_EVENT event, void *pdata, WORD size);

# 1036
const void *USBDeviceCBGetDescriptor (UINT16 *length, DESCRIPTOR_ID *id);

# 1061
void USBCancelIO(BYTE endpoint);

# 1133
typedef struct 
{
union 
{


BYTE *bRam;
const BYTE *bRom;
WORD *wRam;
const WORD *wRom;
}pSrc;
union 
{
struct 
{

BYTE ctrl_trf_mem :1;
BYTE reserved :5;


BYTE includeZero :1;

BYTE busy :1;
}bits;
BYTE Val;
}info;
WORD_VAL wCount;
}IN_PIPE;

extern  IN_PIPE inPipes[];

typedef struct 
{
union 
{


BYTE *bRam;
WORD *wRam;
}pDst;
union 
{
struct 
{
BYTE reserved :7;

BYTE busy :1;
}bits;
BYTE Val;
}info;
WORD_VAL wCount;
void (*pFunc)(void);
}OUT_PIPE;

# 1195
extern  BOOL RemoteWakeup;
extern  USB_DEVICE_STATE USBDeviceState;
extern  BYTE USBActiveConfiguration;

# 308 "../usb_hal_pic18.h"
typedef union _BD_STAT
{
BYTE Val;
struct{

unsigned BC8:1;
unsigned BC9:1;
unsigned BSTALL:1;
unsigned DTSEN:1;
unsigned INCDIS:1;
unsigned KEN:1;
unsigned DTS:1;
unsigned UOWN:1;
};
struct{

# 328
unsigned :1;
unsigned :1;
unsigned PID0:1;
unsigned PID1:1;
unsigned PID2:1;
unsigned PID3:1;
unsigned :1;
unsigned :1;

# 346
};
struct{
unsigned :2;
unsigned PID:4;
unsigned :2;
};
} BD_STAT;


typedef union __BDT
{
struct
{
BD_STAT STAT;
BYTE CNT;
BYTE ADRL;
BYTE ADRH;
};
struct
{
unsigned :8;
unsigned :8;
BYTE* ADR;
};
DWORD Val;
BYTE v[4];
} BDT_ENTRY;

# 384
extern volatile BDT_ENTRY BDT[(1 + 1) * 4];

# 401
typedef union
{
WORD UEP[16];
} _UEP;

# 410
typedef union _POINTER
{
struct
{
BYTE bLow;
BYTE bHigh;

};
WORD _word;



BYTE* bRam;

WORD* wRam;


const BYTE* bRom;
const WORD* wRom;




} POINTER;

# 458
extern  BYTE USBActiveConfiguration;
extern  IN_PIPE inPipes[1];
extern  OUT_PIPE outPipes[1];
extern volatile BDT_ENTRY *pBDTEntryIn[1+1];

# 431 "../usb_device.c"
 USB_DEVICE_STATE USBDeviceState;
 BYTE USBActiveConfiguration;
 BYTE USBAlternateInterface[1];
volatile BDT_ENTRY *pBDTEntryEP0OutCurrent;
volatile BDT_ENTRY *pBDTEntryEP0OutNext;
volatile BDT_ENTRY *pBDTEntryOut[1+1];
volatile BDT_ENTRY *pBDTEntryIn[1+1];
 BYTE shortPacketStatus;
 BYTE controlTransferState;
 IN_PIPE inPipes[1];
 OUT_PIPE outPipes[1];
 BYTE *pDst;
 BOOL RemoteWakeup;
 BYTE USTATcopy;
 BOOL BothEP0OutUOWNsSet;
 WORD USBInMaxPacketSize[1];
 BYTE *USBInData[1];

# 479
volatile BDT_ENTRY BDT[(1 + 1) * 4]  @ 0x400;

# 493
volatile CTRL_TRF_SETUP SetupPkt @ 0x500;
volatile BYTE CtrlTrfData[8] @ 0x520;

# 509
volatile unsigned char hid_report_out[3] @ 0x530;
volatile unsigned char hid_report_in[3] @ 0x570;

# 540
extern const USB_DEVICE_DESCRIPTOR device_dsc;

# 547
extern const BYTE *const USB_CD_Ptr[];


extern const BYTE *const USB_SD_Ptr[];

# 619
BOOL USER_USB_CALLBACK_EVENT_HANDLER(USB_EVENT event, void *pdata, WORD size);


void USBCtrlEPService(void);
void USBCtrlTrfSetupHandler(void);
void USBCtrlTrfInHandler(void);
void USBCheckStdRequest(void);
void USBStdGetDscHandler(void);
void USBCtrlEPServiceComplete(void);
void USBCtrlTrfTxService(void);
void USBPrepareForNextSetupTrf(void);
void USBCtrlTrfRxService(void);
void USBStdSetCfgHandler(void);
void USBStdGetStatusHandler(void);
void USBStdFeatureReqHandler(void);
void USBCtrlTrfOutHandler(void);
BOOL USBIsTxBusy(BYTE EPNumber);
void USBPut(BYTE EPNum, BYTE Data);
void USBEPService(void);
void USBConfigureEndpoint(BYTE EPNum, BYTE direction);

void USBProtocolResetHandler(void);
void USBWakeFromSuspend(void);
void USBSuspend(void);
void USBStallHandler(void);
void* USBTransferOnePacket(BYTE ep, BYTE dir, BYTE* data, BYTE len);
void USBEnableEndpoint(BYTE ep,BYTE options);

# 671
void USBDeviceInit(void)
{
BYTE i;


UEIR = 0;;


UIR = 0;;

{ UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 | 0x02; };


;


;


UCONbits.PPBRST = 1;


UADDR = 0x00;


memset((void*)&UEP1,0x00,(1-1));


UCONbits.PPBRST = 0;


for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
{
BDT[i].Val = 0x00;
}


UEP0 = 0x06|0x10;


while(UIRbits.TRNIF == 1)
{
(UIR &= 0xF7);
}


inPipes[0].info.Val = 0;
outPipes[0].info.Val = 0;
outPipes[0].wCount.Val = 0;


PKTDIS = 0;


pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];


USBActiveConfiguration = 0;


USBDeviceState = DETACHED_STATE;
}

# 777
void USBDeviceTasks(void)

{
BYTE i;

# 806
if (1 != 1)
{

UCON = 0;


UIE = 0;


USBDeviceState = DETACHED_STATE;

# 843
PIR2bits.USBIF = 0;;
return;
}

# 867
if(USBDeviceState == DETACHED_STATE)
{

UCON = 0;


UIE = 0;



{ UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 | 0x02; };


while(!UCONbits.USBEN){UCONbits.USBEN = 1;}


USBDeviceState = ATTACHED_STATE;

# 888
}


if(USBDeviceState == ATTACHED_STATE)
{

# 902
if(!SE0)
{
UIR = 0;;

UIE=0;

UIEbits.URSTIE = 1;
UIEbits.IDLEIE = 1;
USBDeviceState = POWERED_STATE;
}
}

# 928
if(UIRbits.ACTVIF && UIEbits.ACTVIE)
{
(UIR &= 0xFB);



USBWakeFromSuspend();

}

# 941
if(SUSPND==1)
{
PIR2bits.USBIF = 0;;
return;
}

# 957
if(UIRbits.URSTIF && UIEbits.URSTIE)
{
USBDeviceInit();
USBDeviceState = DEFAULT_STATE;

# 972
BDT[0].ADR = (BYTE*)&SetupPkt;
BDT[0].CNT = 8;
BDT[0].STAT.Val &= ~0xFF;
BDT[0].STAT.Val |= 0x80|0x00|0x08|0x04;

# 985
(UIR &= 0xFE);
}

# 991
if(UIRbits.IDLEIF && UIEbits.IDLEIE)
{




USBSuspend();


(UIR &= 0xEF);
}

if(UIRbits.SOFIF && UIEbits.SOFIE)
{
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
(UIR &= 0xBF);
}

if(UIRbits.STALLIF && UIEbits.STALLIE)
{
USBStallHandler();
}

if(UIRbits.UERRIF && UIEbits.UERRIE)
{
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
UEIR = 0;;
}

# 1025
if(USBDeviceState < DEFAULT_STATE)
{
PIR2bits.USBIF = 0;;
return;
}

# 1034
if(UIEbits.TRNIE)
{
for(i = 0; i < 4; i++)
{
if(UIRbits.TRNIF)
{
USTATcopy = USTAT;

(UIR &= 0xF7);

# 1049
if((USTATcopy & 0b01111000) == 0)
{
USBCtrlEPService();
}
else
{
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy,0);

# 1059
}
}
else
break;
}
}

PIR2bits.USBIF = 0;;
}

# 1085
void USBStallHandler(void)
{

# 1098
if(UEP0bits.EPSTALL == 1)
{

if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
{

pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|0x08|0x04;
}
UEP0bits.EPSTALL = 0;
}

(UIR &= 0xDF);
}

# 1128
void USBSuspend(void)
{

# 1153
UIEbits.ACTVIE = 1;
(UIR &= 0xEF);


UCONbits.SUSPND = 1;

# 1167
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
}

# 1185
void USBWakeFromSuspend(void)
{

# 1191
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);

# 1198
UCONbits.SUSPND = 0;




UIEbits.ACTVIE = 0;

# 1221
while(UIRbits.ACTVIF)

{
(UIR &= 0xFB);
}

}

# 1250
void USBCtrlEPService(void)
{

if((USTATcopy & ~0x02) == 0x00)
{


pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy & 0x7E)>>1];

# 1265
pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;

((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;


if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
{



if(pBDTEntryEP0OutCurrent->ADR == (BYTE*)&CtrlTrfData)
{
unsigned char setup_cnt;

pBDTEntryEP0OutCurrent->ADR = (BYTE*)&SetupPkt;
for(setup_cnt = 0; setup_cnt < sizeof(CTRL_TRF_SETUP); setup_cnt++)
{
*(((BYTE*)&SetupPkt)+setup_cnt) = *(((BYTE*)&CtrlTrfData)+setup_cnt);
}
}


USBCtrlTrfSetupHandler();
}
else
{

USBCtrlTrfOutHandler();
}
}
else if((USTATcopy & ~0x02) == 0x04)
{


USBCtrlTrfInHandler();
}

}

# 1344
void USBCtrlTrfSetupHandler(void)
{

if(pBDTEntryIn[0]->STAT.UOWN != 0)
{


pBDTEntryIn[0]->STAT.Val = 0x00;
}


shortPacketStatus = 0;


controlTransferState = 0;

inPipes[0].wCount.Val = 0;
inPipes[0].info.Val = 0;


USBCheckStdRequest();
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);


USBCtrlEPServiceComplete();

}

# 1391
void USBCtrlTrfOutHandler(void)
{
if(controlTransferState == 2)
{
USBCtrlTrfRxService();
}
else
{

# 1404
USBPrepareForNextSetupTrf();
if(BothEP0OutUOWNsSet == FALSE)
{
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
}
else
{
BothEP0OutUOWNsSet = FALSE;
}
}
}

# 1441
void USBCtrlTrfInHandler(void)
{
BYTE lastDTS;

lastDTS = pBDTEntryIn[0]->STAT.DTS;


((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;


if(USBDeviceState == ADR_PENDING_STATE)
{
UADDR = SetupPkt.bDevADR.Val;
if(UADDR > 0)
{
USBDeviceState=ADDRESS_STATE;
}
else
{
USBDeviceState=DEFAULT_STATE;
}
}


if(controlTransferState == 1)
{
pBDTEntryIn[0]->ADR = (BYTE *)CtrlTrfData;
USBCtrlTrfTxService();


if(shortPacketStatus == 2)
{


pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
}
else
{
if(lastDTS == 0)
{
pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
}
else
{
pBDTEntryIn[0]->STAT.Val = 0x80|0x00|0x08;
}
}
}
else
{
USBPrepareForNextSetupTrf();
}

}

# 1513
void USBPrepareForNextSetupTrf(void)
{
controlTransferState = 0;

# 1522
pBDTEntryIn[0]->STAT.Val = 0x00;
{
BDT_ENTRY* p;

p = (BDT_ENTRY*)(((unsigned int)pBDTEntryIn[0])^0x0004);
p->STAT.Val = 0x00;
}




if(outPipes[0].info.bits.busy == 1)
{
if(outPipes[0].pFunc != (0))
{
outPipes[0].pFunc();
}
outPipes[0].info.bits.busy = 0;
}
}

# 1559
void USBCheckStdRequest(void)
{
if(SetupPkt.RequestType != (0x00>>5)) return;

switch(SetupPkt.bRequest)
{
case 5:
inPipes[0].info.bits.busy = 1;
USBDeviceState = ADR_PENDING_STATE;

break;
case 6:
USBStdGetDscHandler();
break;
case 9:
USBStdSetCfgHandler();
break;
case 8:
inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
inPipes[0].info.bits.ctrl_trf_mem = 0x01;
inPipes[0].wCount.v[0] = 1;
inPipes[0].info.bits.busy = 1;
break;
case 0:
USBStdGetStatusHandler();
break;
case 1:
case 3:
USBStdFeatureReqHandler();
break;
case 10:
inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntfID];
inPipes[0].info.bits.ctrl_trf_mem = 0x01;
inPipes[0].wCount.v[0] = 1;
inPipes[0].info.bits.busy = 1;
break;
case 11:
inPipes[0].info.bits.busy = 1;
USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
break;
case 7:
USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
break;
case 12:
default:
break;
}
}

# 1624
void USBStdFeatureReqHandler(void)
{
BDT_ENTRY *p;



unsigned int* pUEP;

# 1664
if((SetupPkt.bFeature == 1)&&
(SetupPkt.Recipient == (0x00)))
{
inPipes[0].info.bits.busy = 1;
if(SetupPkt.bRequest == 3)
RemoteWakeup = TRUE;
else
RemoteWakeup = FALSE;
}

if((SetupPkt.bFeature == 0)&&
(SetupPkt.Recipient == (0x02))&&
(SetupPkt.EPNum != 0))
{
inPipes[0].info.bits.busy = 1;


if(SetupPkt.EPDir == 0)
{
p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
}
else
{
p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
}


if(SetupPkt.bRequest == 3)
{

p->STAT.Val = 0x80|0x04;
}
else
{

# 1704
pUEP = (unsigned int*)(&UEP0+SetupPkt.EPNum);



*pUEP &= ~0x0001;

if(SetupPkt.EPDir == 1)
{




p->STAT.Val = 0x00|0x00;

((BYTE_VAL*)&p)->Val ^= 0x0004;
p->STAT.Val = 0x00|0x40;

# 1723
}
else
{

# 1733
p->STAT.Val = 0x80|0x00|0x08;

((BYTE_VAL*)&p)->Val ^= 0x0004;
p->STAT.Val = 0x80|0x40|0x08;

# 1741
}
}

}
}

# 1763
void USBStdGetDscHandler(void)
{
if(SetupPkt.bmRequestType == 0x80)
{
inPipes[0].info.Val = 0x00 | 0x80 | 0x40;

switch(SetupPkt.bDescriptorType)
{
case 0x01:



inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;

inPipes[0].wCount.Val = sizeof(device_dsc);
break;
case 0x02:



inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);

inPipes[0].wCount.Val = *(inPipes[0].pSrc.wRom+1);
break;
case 0x03:



if(SetupPkt.bDscIndex<3)
{

inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);

inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
}
else
{
inPipes[0].info.Val = 0;
}
break;
default:
inPipes[0].info.Val = 0;
break;
}
}
}

# 1825
void USBStdGetStatusHandler(void)
{
CtrlTrfData[0] = 0;
CtrlTrfData[1] = 0;

switch(SetupPkt.Recipient)
{
case (0x00):
inPipes[0].info.bits.busy = 1;

# 1838
if(1 == 1)
{
CtrlTrfData[0]|=0x01;
}

if(RemoteWakeup == TRUE)
{
CtrlTrfData[0]|=0x02;
}
break;
case (0x01):
inPipes[0].info.bits.busy = 1;
break;
case (0x02):
inPipes[0].info.bits.busy = 1;

# 1856
{
BDT_ENTRY *p;

if(SetupPkt.EPDir == 0)
{
p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
}
else
{
p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
}

if(p->STAT.Val & 0x04)
CtrlTrfData[0]=0x01;
break;
}
}

if(inPipes[0].info.bits.busy == 1)
{
inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
inPipes[0].info.bits.ctrl_trf_mem = 0x01;
inPipes[0].wCount.v[0] = 2;
}
}

# 1910
void USBCtrlEPServiceComplete(void)
{

# 1916
PKTDIS = 0;

if(inPipes[0].info.bits.busy == 0)
{
if(outPipes[0].info.bits.busy == 1)
{
controlTransferState = 2;

# 1932
pBDTEntryIn[0]->CNT = 0;
pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;

# 1938
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
}
else
{

# 1948
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
}
}
else
{
if(outPipes[0].info.bits.busy == 0)
{
if(SetupPkt.DataDir == (0x80>>7))
{
if(SetupPkt.wLength < inPipes[0].wCount.Val)
{
inPipes[0].wCount.Val = SetupPkt.wLength;
}
USBCtrlTrfTxService();
controlTransferState = 1;

# 1987
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;
pBDTEntryEP0OutNext->STAT.Val = 0x80;
BothEP0OutUOWNsSet = FALSE;


pBDTEntryEP0OutCurrent->CNT = 8;
pBDTEntryEP0OutCurrent->ADR = (BYTE*)&SetupPkt;
pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
BothEP0OutUOWNsSet = TRUE;

# 2003
pBDTEntryIn[0]->ADR = (BYTE*)&CtrlTrfData;
pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;
}
else
{
controlTransferState = 2;

# 2018
pBDTEntryIn[0]->CNT = 0;
pBDTEntryIn[0]->STAT.Val = 0x80|0x40|0x08;

# 2024
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
}
}
}

}

# 2057
void USBCtrlTrfTxService(void)
{
WORD_VAL byteToSend;

# 2064
if(inPipes[0].wCount.Val < 8)
{
byteToSend.Val = inPipes[0].wCount.Val;


if(shortPacketStatus == 0)
{
shortPacketStatus = 1;
}
else if(shortPacketStatus == 1)
{
shortPacketStatus = 2;
}

}
else
{
byteToSend.Val = 8;
}

# 2088
pBDTEntryIn[0]->STAT.BC9 = 0;
pBDTEntryIn[0]->STAT.BC8 = 0;



pBDTEntryIn[0]->STAT.Val |= byteToSend.byte.HB;
pBDTEntryIn[0]->CNT = byteToSend.byte.LB;

# 2104
inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend.Val;

pDst = ( BYTE*)CtrlTrfData;

if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
{
while(byteToSend.Val)
{
*pDst++ = *inPipes[0].pSrc.bRom++;
byteToSend.Val--;
}
}
else
{
while(byteToSend.Val)
{
*pDst++ = *inPipes[0].pSrc.bRam++;
byteToSend.Val--;
}
}

}

# 2152
void USBCtrlTrfRxService(void)
{
BYTE byteToRead;
BYTE i;

byteToRead = pBDTEntryEP0OutCurrent->CNT;

# 2162
if(byteToRead > outPipes[0].wCount.Val)
{
byteToRead = outPipes[0].wCount.Val;
}
else
{
outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
}

for(i=0;i<byteToRead;i++)
{
*outPipes[0].pDst.bRam++ = CtrlTrfData[i];
}


if(outPipes[0].wCount.Val > 0)
{

# 2184
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&CtrlTrfData;
if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
{
pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|0x08;
}
else
{
pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08;
}
}
else
{
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;



pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;

if(outPipes[0].pFunc != (0))
{
outPipes[0].pFunc();
}
outPipes[0].info.bits.busy = 0;
}
}

# 2230
void USBStdSetCfgHandler(void)
{

inPipes[0].info.bits.busy = 1;


memset((void*)&UEP1,0x00,(1-1));


memset((void*)&USBAlternateInterface,0x00,1);


USBActiveConfiguration = SetupPkt.bConfigurationValue;


if(USBActiveConfiguration == 0)
{

USBDeviceState = ADDRESS_STATE;
}
else
{

USBDeviceState = CONFIGURED_STATE;

USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);

}
}

# 2277
void USBConfigureEndpoint(BYTE EPNum, BYTE direction)
{
volatile BDT_ENTRY* handle;

unsigned char workaround;


handle = (volatile BDT_ENTRY*)&BDT[0];




workaround = (4*(4*EPNum+2*direction+0));
workaround = workaround/sizeof(BDT_ENTRY);
handle += workaround;

# 2295
handle->STAT.UOWN = 0;

if(direction == 0)
{
pBDTEntryOut[EPNum] = handle;
}
else
{
pBDTEntryIn[EPNum] = handle;
}


handle->STAT.DTS = 0;
(handle+1)->STAT.DTS = 1;

# 2325
}

# 2376
void USBEnableEndpoint(BYTE ep, BYTE options)
{


{
unsigned char* p;




p = (unsigned char*)(&UEP0+ep);

*p = options;
}

if(options & 0x04)
{
USBConfigureEndpoint(ep,0);
}
if(options & 0x02)
{
USBConfigureEndpoint(ep,1);
}
}

# 2418
void USBStallEndpoint(BYTE ep, BYTE dir)
{
BDT_ENTRY *p;

if(ep == 0)
{

# 2428
pBDTEntryEP0OutNext->CNT = 8;
pBDTEntryEP0OutNext->ADR = (BYTE*)&SetupPkt;


pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|0x08|0x04;
pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
}
else
{
p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
p->STAT.Val |= 0x04 | 0x80;

# 2445
p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
p->STAT.Val |= 0x04 | 0x80;

}
}

# 2476
void* USBTransferOnePacket(BYTE ep,BYTE dir,BYTE* data,BYTE len)
{
volatile BDT_ENTRY* handle;


if(dir != 0)
{

handle = pBDTEntryIn[ep];
}
else
{

handle = pBDTEntryOut[ep];
}

# 2503
handle->ADR = (BYTE*)data;
handle->CNT = len;
handle->STAT.Val &= 0x40;
handle->STAT.Val |= 0x80 | 0x08;


if(dir != 0)
{

((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;
}
else
{

((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;
}
return (void*)handle;
}

# 2545
void USBCancelIO(BYTE endpoint)
{
if(PKTDIS == 1)
{


pBDTEntryIn[endpoint]->Val &= 0x40;
pBDTEntryIn[endpoint]->Val ^= 0x40;

# 2559
((BYTE_VAL*)&pBDTEntryIn[endpoint])->Val ^= 0x0004;

pBDTEntryIn[endpoint]->STAT.Val &= 0x40;
pBDTEntryIn[endpoint]->STAT.Val ^= 0x40;

}
}

